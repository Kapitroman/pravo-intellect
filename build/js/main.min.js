/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/webpack/buildin/module.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/module.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_mobile_vh_fix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/mobile-vh-fix.js */ "./js/utils/mobile-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_form_validate_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/form-validate/form */ "./js/modules/form-validate/form.js");
/* harmony import */ var _modules_select_custom_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/select/custom-select */ "./js/modules/select/custom-select.js");
/* harmony import */ var _modules_burger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/burger */ "./js/modules/burger.js");
/* harmony import */ var _modules_init_scroll_blink__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/init-scroll-blink */ "./js/modules/init-scroll-blink.js");
/* harmony import */ var _modules_init_scroll_separator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/init-scroll-separator */ "./js/modules/init-scroll-separator.js");
/* harmony import */ var _modules_init_map__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/init-map */ "./js/modules/init-map.js");
/* harmony import */ var _modules_init_partners_slider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/init-partners-slider */ "./js/modules/init-partners-slider.js");
/* harmony import */ var _modules_init_news_slider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/init-news-slider */ "./js/modules/init-news-slider.js");
/* harmony import */ var _modules_copy_in_buffer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/copy-in-buffer */ "./js/modules/copy-in-buffer.js");
/* harmony import */ var _modules_init_tabs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/init-tabs */ "./js/modules/init-tabs.js");
/* harmony import */ var _modules_init_tabs_slider_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/init-tabs-slider.js */ "./js/modules/init-tabs-slider.js");




// import { uploadFile, uploadImageDrop } from './modules/input-file/init-upload';










// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  Object(_utils_mobile_vh_fix_js__WEBPACK_IMPORTED_MODULE_0__["mobileVhFix"])();

  // Modules
  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
    // uploadFile();
    // uploadImageDrop();
    var select = new _modules_select_custom_select__WEBPACK_IMPORTED_MODULE_3__["CustomSelect"]();
    select.init();
    var form = new _modules_form_validate_form__WEBPACK_IMPORTED_MODULE_2__["Form"]();
    window.form = form;
    form.init();
    var burger = new _modules_burger__WEBPACK_IMPORTED_MODULE_4__["Burger"]();
    burger.init();
    Object(_modules_init_scroll_blink__WEBPACK_IMPORTED_MODULE_5__["initScrollBlink"])();
    Object(_modules_init_scroll_separator__WEBPACK_IMPORTED_MODULE_6__["initScrollSeparator"])();
    Object(_modules_init_map__WEBPACK_IMPORTED_MODULE_7__["initYM"])();
    Object(_modules_init_partners_slider__WEBPACK_IMPORTED_MODULE_8__["initPartnersSlider"])();
    Object(_modules_init_news_slider__WEBPACK_IMPORTED_MODULE_9__["initNewsSlider"])();
    Object(_modules_copy_in_buffer__WEBPACK_IMPORTED_MODULE_10__["copyInBuffer"])();
    Object(_modules_init_tabs__WEBPACK_IMPORTED_MODULE_11__["initTabs"])();
    Object(_modules_init_tabs_slider_js__WEBPACK_IMPORTED_MODULE_12__["initTabsSlider"])();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

/***/ }),

/***/ "./js/modules/burger.js":
/*!******************************!*\
  !*** ./js/modules/burger.js ***!
  \******************************/
/*! exports provided: Burger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Burger", function() { return Burger; });
/* harmony import */ var _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/scroll-lock.min */ "./js/vendor/scroll-lock.min.js");
/* harmony import */ var _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/focus-lock */ "./js/utils/focus-lock.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var Burger = /*#__PURE__*/function () {
  function Burger() {
    _classCallCheck(this, Burger);
    this._header = document.querySelector('[data-header]');
    this._burger = document.querySelector('[data-burger]');
    this._scrollLock = _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0___default.a;
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._isMenuOpen = false;
    this._onBurgerClick = this._onBurgerClick.bind(this);
    this._onDocumentKeydown = this._onDocumentKeydown.bind(this);
    this._onDocumentClick = this._onDocumentClick.bind(this);
  }
  _createClass(Burger, [{
    key: "init",
    value: function init() {
      if (!this._burger) {
        return;
      }
      this._burger.addEventListener('click', this._onBurgerClick);
    }
  }, {
    key: "_openMenu",
    value: function _openMenu() {
      this._isMenuOpen = true;
      this._header.classList.add('is-open');
      this._scrollLock.disablePageScroll();
      document.addEventListener('keydown', this._onDocumentKeydown);
      document.addEventListener('click', this._onDocumentClick);
      this._focusLock.lock('[data-header]');
      if (window.ls) {
        window.ls.stop();
      }
    }
  }, {
    key: "_closeMenu",
    value: function _closeMenu() {
      this._isMenuOpen = false;
      this._header.classList.remove('is-open');
      this._scrollLock.enablePageScroll();
      this._focusLock.unlock('[data-header]');
      document.removeEventListener('keydown', this._onDocumentKeydown);
      document.removeEventListener('click', this._onDocumentClick);
      if (window.ls) {
        window.ls.start();
      }
    }
  }, {
    key: "_onBurgerClick",
    value: function _onBurgerClick() {
      if (this._isMenuOpen) {
        this._closeMenu();
      } else {
        this._openMenu();
      }
    }
  }, {
    key: "_onDocumentKeydown",
    value: function _onDocumentKeydown(evt) {
      if (evt.key === 'Escape') {
        this._closeMenu();
      }
    }
  }, {
    key: "_onDocumentClick",
    value: function _onDocumentClick(evt) {
      if (evt.target.hasAttribute('data-close-menu') || evt.target.hasAttribute('href')) {
        this._closeMenu();
      }
    }
  }]);
  return Burger;
}();

/***/ }),

/***/ "./js/modules/copy-in-buffer.js":
/*!**************************************!*\
  !*** ./js/modules/copy-in-buffer.js ***!
  \**************************************/
/*! exports provided: copyInBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyInBuffer", function() { return copyInBuffer; });
var copyButtons = Array.from(document.querySelectorAll('[data-copy]'));
var copyInBuffer = function copyInBuffer() {
  if (copyButtons.length === 0) {
    return;
  }
  var clickHandler = function clickHandler(evt) {
    var dataWrapper = evt.target.closest('.pay__official-info-value');
    var data = dataWrapper.querySelector('p').innerHTML;
    navigator.clipboard.writeText(data).then(function () {
      dataWrapper.classList.add('is-copied');
      setTimeout(function () {
        return dataWrapper.classList.remove('is-copied');
      }, 1000);
    }).catch(function () {
      console.log('не удалось скопировать данные');
    });
  };
  copyButtons.forEach(function (item) {
    return item.addEventListener('click', clickHandler);
  });
};


/***/ }),

/***/ "./js/modules/customization.js":
/*!*************************************!*\
  !*** ./js/modules/customization.js ***!
  \*************************************/
/*! exports provided: schemeLayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "schemeLayer", function() { return schemeLayer; });
var schemeLayer = [{
  "tags": "country",
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#8c8c8c"
  }, {
    "zoom": 0,
    "opacity": 0.8
  }, {
    "zoom": 1,
    "opacity": 0.8
  }, {
    "zoom": 2,
    "opacity": 0.8
  }, {
    "zoom": 3,
    "opacity": 0.8
  }, {
    "zoom": 4,
    "opacity": 0.8
  }, {
    "zoom": 5,
    "opacity": 1
  }, {
    "zoom": 6,
    "opacity": 1
  }, {
    "zoom": 7,
    "opacity": 1
  }, {
    "zoom": 8,
    "opacity": 1
  }, {
    "zoom": 9,
    "opacity": 1
  }, {
    "zoom": 10,
    "opacity": 1
  }, {
    "zoom": 11,
    "opacity": 1
  }, {
    "zoom": 12,
    "opacity": 1
  }, {
    "zoom": 13,
    "opacity": 1
  }, {
    "zoom": 14,
    "opacity": 1
  }, {
    "zoom": 15,
    "opacity": 1
  }, {
    "zoom": 16,
    "opacity": 1
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": "country",
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#dedede"
  }, {
    "zoom": 0,
    "opacity": 0.15
  }, {
    "zoom": 1,
    "opacity": 0.15
  }, {
    "zoom": 2,
    "opacity": 0.15
  }, {
    "zoom": 3,
    "opacity": 0.15
  }, {
    "zoom": 4,
    "opacity": 0.15
  }, {
    "zoom": 5,
    "opacity": 0.15
  }, {
    "zoom": 6,
    "opacity": 0.25
  }, {
    "zoom": 7,
    "opacity": 0.5
  }, {
    "zoom": 8,
    "opacity": 0.47
  }, {
    "zoom": 9,
    "opacity": 0.44
  }, {
    "zoom": 10,
    "opacity": 0.41
  }, {
    "zoom": 11,
    "opacity": 0.38
  }, {
    "zoom": 12,
    "opacity": 0.35
  }, {
    "zoom": 13,
    "opacity": 0.33
  }, {
    "zoom": 14,
    "opacity": 0.3
  }, {
    "zoom": 15,
    "opacity": 0.28
  }, {
    "zoom": 16,
    "opacity": 0.25
  }, {
    "zoom": 17,
    "opacity": 0.25
  }, {
    "zoom": 18,
    "opacity": 0.25
  }, {
    "zoom": 19,
    "opacity": 0.25
  }, {
    "zoom": 20,
    "opacity": 0.25
  }, {
    "zoom": 21,
    "opacity": 0.25
  }]
}, {
  "tags": "region",
  "elements": "geometry.fill",
  "stylers": [{
    "zoom": 0,
    "color": "#a6a6a6",
    "opacity": 0.5
  }, {
    "zoom": 1,
    "color": "#a6a6a6",
    "opacity": 0.5
  }, {
    "zoom": 2,
    "color": "#a6a6a6",
    "opacity": 0.5
  }, {
    "zoom": 3,
    "color": "#a6a6a6",
    "opacity": 0.5
  }, {
    "zoom": 4,
    "color": "#a6a6a6",
    "opacity": 0.5
  }, {
    "zoom": 5,
    "color": "#a6a6a6",
    "opacity": 0.5
  }, {
    "zoom": 6,
    "color": "#a6a6a6",
    "opacity": 1
  }, {
    "zoom": 7,
    "color": "#a6a6a6",
    "opacity": 1
  }, {
    "zoom": 8,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 9,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 10,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 11,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 12,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 13,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 14,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 15,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 16,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 17,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 18,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 19,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 20,
    "color": "#8c8c8c",
    "opacity": 1
  }, {
    "zoom": 21,
    "color": "#8c8c8c",
    "opacity": 1
  }]
}, {
  "tags": "region",
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#dedede"
  }, {
    "zoom": 0,
    "opacity": 0.15
  }, {
    "zoom": 1,
    "opacity": 0.15
  }, {
    "zoom": 2,
    "opacity": 0.15
  }, {
    "zoom": 3,
    "opacity": 0.15
  }, {
    "zoom": 4,
    "opacity": 0.15
  }, {
    "zoom": 5,
    "opacity": 0.15
  }, {
    "zoom": 6,
    "opacity": 0.25
  }, {
    "zoom": 7,
    "opacity": 0.5
  }, {
    "zoom": 8,
    "opacity": 0.47
  }, {
    "zoom": 9,
    "opacity": 0.44
  }, {
    "zoom": 10,
    "opacity": 0.41
  }, {
    "zoom": 11,
    "opacity": 0.38
  }, {
    "zoom": 12,
    "opacity": 0.35
  }, {
    "zoom": 13,
    "opacity": 0.33
  }, {
    "zoom": 14,
    "opacity": 0.3
  }, {
    "zoom": 15,
    "opacity": 0.28
  }, {
    "zoom": 16,
    "opacity": 0.25
  }, {
    "zoom": 17,
    "opacity": 0.25
  }, {
    "zoom": 18,
    "opacity": 0.25
  }, {
    "zoom": 19,
    "opacity": 0.25
  }, {
    "zoom": 20,
    "opacity": 0.25
  }, {
    "zoom": 21,
    "opacity": 0.25
  }]
}, {
  "tags": {
    "any": "admin",
    "none": ["country", "region", "locality", "district", "address"]
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#8c8c8c"
  }, {
    "zoom": 0,
    "opacity": 0.5
  }, {
    "zoom": 1,
    "opacity": 0.5
  }, {
    "zoom": 2,
    "opacity": 0.5
  }, {
    "zoom": 3,
    "opacity": 0.5
  }, {
    "zoom": 4,
    "opacity": 0.5
  }, {
    "zoom": 5,
    "opacity": 0.5
  }, {
    "zoom": 6,
    "opacity": 1
  }, {
    "zoom": 7,
    "opacity": 1
  }, {
    "zoom": 8,
    "opacity": 1
  }, {
    "zoom": 9,
    "opacity": 1
  }, {
    "zoom": 10,
    "opacity": 1
  }, {
    "zoom": 11,
    "opacity": 1
  }, {
    "zoom": 12,
    "opacity": 1
  }, {
    "zoom": 13,
    "opacity": 1
  }, {
    "zoom": 14,
    "opacity": 1
  }, {
    "zoom": 15,
    "opacity": 1
  }, {
    "zoom": 16,
    "opacity": 1
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": {
    "any": "admin",
    "none": ["country", "region", "locality", "district", "address"]
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#dedede"
  }, {
    "zoom": 0,
    "opacity": 0.15
  }, {
    "zoom": 1,
    "opacity": 0.15
  }, {
    "zoom": 2,
    "opacity": 0.15
  }, {
    "zoom": 3,
    "opacity": 0.15
  }, {
    "zoom": 4,
    "opacity": 0.15
  }, {
    "zoom": 5,
    "opacity": 0.15
  }, {
    "zoom": 6,
    "opacity": 0.25
  }, {
    "zoom": 7,
    "opacity": 0.5
  }, {
    "zoom": 8,
    "opacity": 0.47
  }, {
    "zoom": 9,
    "opacity": 0.44
  }, {
    "zoom": 10,
    "opacity": 0.41
  }, {
    "zoom": 11,
    "opacity": 0.38
  }, {
    "zoom": 12,
    "opacity": 0.35
  }, {
    "zoom": 13,
    "opacity": 0.33
  }, {
    "zoom": 14,
    "opacity": 0.3
  }, {
    "zoom": 15,
    "opacity": 0.28
  }, {
    "zoom": 16,
    "opacity": 0.25
  }, {
    "zoom": 17,
    "opacity": 0.25
  }, {
    "zoom": 18,
    "opacity": 0.25
  }, {
    "zoom": 19,
    "opacity": 0.25
  }, {
    "zoom": 20,
    "opacity": 0.25
  }, {
    "zoom": 21,
    "opacity": 0.25
  }]
}, {
  "tags": {
    "any": "landcover",
    "none": "vegetation"
  },
  "stylers": [{
    "hue": "#c7cfd6"
  }]
}, {
  "tags": "vegetation",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#aab6c0",
    "opacity": 0.1
  }, {
    "zoom": 1,
    "color": "#aab6c0",
    "opacity": 0.1
  }, {
    "zoom": 2,
    "color": "#aab6c0",
    "opacity": 0.1
  }, {
    "zoom": 3,
    "color": "#aab6c0",
    "opacity": 0.1
  }, {
    "zoom": 4,
    "color": "#aab6c0",
    "opacity": 0.1
  }, {
    "zoom": 5,
    "color": "#aab6c0",
    "opacity": 0.1
  }, {
    "zoom": 6,
    "color": "#aab6c0",
    "opacity": 0.2
  }, {
    "zoom": 7,
    "color": "#c7cfd6",
    "opacity": 0.3
  }, {
    "zoom": 8,
    "color": "#c7cfd6",
    "opacity": 0.4
  }, {
    "zoom": 9,
    "color": "#c7cfd6",
    "opacity": 0.6
  }, {
    "zoom": 10,
    "color": "#c7cfd6",
    "opacity": 0.8
  }, {
    "zoom": 11,
    "color": "#c7cfd6",
    "opacity": 1
  }, {
    "zoom": 12,
    "color": "#c7cfd6",
    "opacity": 1
  }, {
    "zoom": 13,
    "color": "#c7cfd6",
    "opacity": 1
  }, {
    "zoom": 14,
    "color": "#cdd4da",
    "opacity": 1
  }, {
    "zoom": 15,
    "color": "#d3d9df",
    "opacity": 1
  }, {
    "zoom": 16,
    "color": "#d3d9df",
    "opacity": 1
  }, {
    "zoom": 17,
    "color": "#d3d9df",
    "opacity": 1
  }, {
    "zoom": 18,
    "color": "#d3d9df",
    "opacity": 1
  }, {
    "zoom": 19,
    "color": "#d3d9df",
    "opacity": 1
  }, {
    "zoom": 20,
    "color": "#d3d9df",
    "opacity": 1
  }, {
    "zoom": 21,
    "color": "#d3d9df",
    "opacity": 1
  }]
}, {
  "tags": "park",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 1,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 2,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 3,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 4,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 5,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 6,
    "color": "#c7cfd6",
    "opacity": 0.2
  }, {
    "zoom": 7,
    "color": "#c7cfd6",
    "opacity": 0.3
  }, {
    "zoom": 8,
    "color": "#c7cfd6",
    "opacity": 0.4
  }, {
    "zoom": 9,
    "color": "#c7cfd6",
    "opacity": 0.6
  }, {
    "zoom": 10,
    "color": "#c7cfd6",
    "opacity": 0.8
  }, {
    "zoom": 11,
    "color": "#c7cfd6",
    "opacity": 1
  }, {
    "zoom": 12,
    "color": "#c7cfd6",
    "opacity": 1
  }, {
    "zoom": 13,
    "color": "#c7cfd6",
    "opacity": 1
  }, {
    "zoom": 14,
    "color": "#cdd4da",
    "opacity": 1
  }, {
    "zoom": 15,
    "color": "#d3d9df",
    "opacity": 1
  }, {
    "zoom": 16,
    "color": "#d3d9df",
    "opacity": 0.9
  }, {
    "zoom": 17,
    "color": "#d3d9df",
    "opacity": 0.8
  }, {
    "zoom": 18,
    "color": "#d3d9df",
    "opacity": 0.7
  }, {
    "zoom": 19,
    "color": "#d3d9df",
    "opacity": 0.7
  }, {
    "zoom": 20,
    "color": "#d3d9df",
    "opacity": 0.7
  }, {
    "zoom": 21,
    "color": "#d3d9df",
    "opacity": 0.7
  }]
}, {
  "tags": "national_park",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 1,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 2,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 3,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 4,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 5,
    "color": "#c7cfd6",
    "opacity": 0.1
  }, {
    "zoom": 6,
    "color": "#c7cfd6",
    "opacity": 0.2
  }, {
    "zoom": 7,
    "color": "#c7cfd6",
    "opacity": 0.3
  }, {
    "zoom": 8,
    "color": "#c7cfd6",
    "opacity": 0.4
  }, {
    "zoom": 9,
    "color": "#c7cfd6",
    "opacity": 0.6
  }, {
    "zoom": 10,
    "color": "#c7cfd6",
    "opacity": 0.8
  }, {
    "zoom": 11,
    "color": "#c7cfd6",
    "opacity": 1
  }, {
    "zoom": 12,
    "color": "#c7cfd6",
    "opacity": 1
  }, {
    "zoom": 13,
    "color": "#c7cfd6",
    "opacity": 1
  }, {
    "zoom": 14,
    "color": "#cdd4da",
    "opacity": 1
  }, {
    "zoom": 15,
    "color": "#d3d9df",
    "opacity": 1
  }, {
    "zoom": 16,
    "color": "#d3d9df",
    "opacity": 0.7
  }, {
    "zoom": 17,
    "color": "#d3d9df",
    "opacity": 0.7
  }, {
    "zoom": 18,
    "color": "#d3d9df",
    "opacity": 0.7
  }, {
    "zoom": 19,
    "color": "#d3d9df",
    "opacity": 0.7
  }, {
    "zoom": 20,
    "color": "#d3d9df",
    "opacity": 0.7
  }, {
    "zoom": 21,
    "color": "#d3d9df",
    "opacity": 0.7
  }]
}, {
  "tags": "cemetery",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#c7cfd6"
  }, {
    "zoom": 1,
    "color": "#c7cfd6"
  }, {
    "zoom": 2,
    "color": "#c7cfd6"
  }, {
    "zoom": 3,
    "color": "#c7cfd6"
  }, {
    "zoom": 4,
    "color": "#c7cfd6"
  }, {
    "zoom": 5,
    "color": "#c7cfd6"
  }, {
    "zoom": 6,
    "color": "#c7cfd6"
  }, {
    "zoom": 7,
    "color": "#c7cfd6"
  }, {
    "zoom": 8,
    "color": "#c7cfd6"
  }, {
    "zoom": 9,
    "color": "#c7cfd6"
  }, {
    "zoom": 10,
    "color": "#c7cfd6"
  }, {
    "zoom": 11,
    "color": "#c7cfd6"
  }, {
    "zoom": 12,
    "color": "#c7cfd6"
  }, {
    "zoom": 13,
    "color": "#c7cfd6"
  }, {
    "zoom": 14,
    "color": "#cdd4da"
  }, {
    "zoom": 15,
    "color": "#d3d9df"
  }, {
    "zoom": 16,
    "color": "#d3d9df"
  }, {
    "zoom": 17,
    "color": "#d3d9df"
  }, {
    "zoom": 18,
    "color": "#d3d9df"
  }, {
    "zoom": 19,
    "color": "#d3d9df"
  }, {
    "zoom": 20,
    "color": "#d3d9df"
  }, {
    "zoom": 21,
    "color": "#d3d9df"
  }]
}, {
  "tags": "sports_ground",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 1,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 2,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 3,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 4,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 5,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 6,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 7,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 8,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 9,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 10,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 11,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 12,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 13,
    "color": "#b8c2cb",
    "opacity": 0
  }, {
    "zoom": 14,
    "color": "#bec7cf",
    "opacity": 0
  }, {
    "zoom": 15,
    "color": "#c4ccd4",
    "opacity": 0.5
  }, {
    "zoom": 16,
    "color": "#c5cdd5",
    "opacity": 1
  }, {
    "zoom": 17,
    "color": "#c6ced5",
    "opacity": 1
  }, {
    "zoom": 18,
    "color": "#c7ced6",
    "opacity": 1
  }, {
    "zoom": 19,
    "color": "#c8cfd7",
    "opacity": 1
  }, {
    "zoom": 20,
    "color": "#c9d0d7",
    "opacity": 1
  }, {
    "zoom": 21,
    "color": "#cad1d8",
    "opacity": 1
  }]
}, {
  "tags": "terrain",
  "elements": "geometry",
  "stylers": [{
    "hue": "#e1e3e5"
  }, {
    "zoom": 0,
    "opacity": 0.3
  }, {
    "zoom": 1,
    "opacity": 0.3
  }, {
    "zoom": 2,
    "opacity": 0.3
  }, {
    "zoom": 3,
    "opacity": 0.3
  }, {
    "zoom": 4,
    "opacity": 0.3
  }, {
    "zoom": 5,
    "opacity": 0.35
  }, {
    "zoom": 6,
    "opacity": 0.4
  }, {
    "zoom": 7,
    "opacity": 0.6
  }, {
    "zoom": 8,
    "opacity": 0.8
  }, {
    "zoom": 9,
    "opacity": 0.9
  }, {
    "zoom": 10,
    "opacity": 1
  }, {
    "zoom": 11,
    "opacity": 1
  }, {
    "zoom": 12,
    "opacity": 1
  }, {
    "zoom": 13,
    "opacity": 1
  }, {
    "zoom": 14,
    "opacity": 1
  }, {
    "zoom": 15,
    "opacity": 1
  }, {
    "zoom": 16,
    "opacity": 1
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": "geographic_line",
  "elements": "geometry",
  "stylers": [{
    "color": "#747d86"
  }]
}, {
  "tags": "land",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#e1e3e4"
  }, {
    "zoom": 1,
    "color": "#e1e3e4"
  }, {
    "zoom": 2,
    "color": "#e1e3e4"
  }, {
    "zoom": 3,
    "color": "#e1e3e4"
  }, {
    "zoom": 4,
    "color": "#e1e3e4"
  }, {
    "zoom": 5,
    "color": "#e4e5e6"
  }, {
    "zoom": 6,
    "color": "#e6e8e9"
  }, {
    "zoom": 7,
    "color": "#e9eaeb"
  }, {
    "zoom": 8,
    "color": "#ecedee"
  }, {
    "zoom": 9,
    "color": "#ecedee"
  }, {
    "zoom": 10,
    "color": "#ecedee"
  }, {
    "zoom": 11,
    "color": "#ecedee"
  }, {
    "zoom": 12,
    "color": "#ecedee"
  }, {
    "zoom": 13,
    "color": "#ecedee"
  }, {
    "zoom": 14,
    "color": "#eeeff0"
  }, {
    "zoom": 15,
    "color": "#f1f2f3"
  }, {
    "zoom": 16,
    "color": "#f1f2f3"
  }, {
    "zoom": 17,
    "color": "#f2f3f4"
  }, {
    "zoom": 18,
    "color": "#f2f3f4"
  }, {
    "zoom": 19,
    "color": "#f3f4f4"
  }, {
    "zoom": 20,
    "color": "#f3f4f5"
  }, {
    "zoom": 21,
    "color": "#f4f5f5"
  }]
}, {
  "tags": "residential",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 1,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 2,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 3,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 4,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 5,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 6,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 7,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 8,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 9,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 10,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 11,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 12,
    "color": "#e1e3e5",
    "opacity": 0.5
  }, {
    "zoom": 13,
    "color": "#e1e3e5",
    "opacity": 1
  }, {
    "zoom": 14,
    "color": "#e6e8e9",
    "opacity": 1
  }, {
    "zoom": 15,
    "color": "#ecedee",
    "opacity": 1
  }, {
    "zoom": 16,
    "color": "#edeeef",
    "opacity": 1
  }, {
    "zoom": 17,
    "color": "#eeeff0",
    "opacity": 1
  }, {
    "zoom": 18,
    "color": "#eeeff0",
    "opacity": 1
  }, {
    "zoom": 19,
    "color": "#eff0f1",
    "opacity": 1
  }, {
    "zoom": 20,
    "color": "#f0f1f2",
    "opacity": 1
  }, {
    "zoom": 21,
    "color": "#f1f2f3",
    "opacity": 1
  }]
}, {
  "tags": "locality",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#e1e3e5"
  }, {
    "zoom": 1,
    "color": "#e1e3e5"
  }, {
    "zoom": 2,
    "color": "#e1e3e5"
  }, {
    "zoom": 3,
    "color": "#e1e3e5"
  }, {
    "zoom": 4,
    "color": "#e1e3e5"
  }, {
    "zoom": 5,
    "color": "#e1e3e5"
  }, {
    "zoom": 6,
    "color": "#e1e3e5"
  }, {
    "zoom": 7,
    "color": "#e1e3e5"
  }, {
    "zoom": 8,
    "color": "#e1e3e5"
  }, {
    "zoom": 9,
    "color": "#e1e3e5"
  }, {
    "zoom": 10,
    "color": "#e1e3e5"
  }, {
    "zoom": 11,
    "color": "#e1e3e5"
  }, {
    "zoom": 12,
    "color": "#e1e3e5"
  }, {
    "zoom": 13,
    "color": "#e1e3e5"
  }, {
    "zoom": 14,
    "color": "#e6e8e9"
  }, {
    "zoom": 15,
    "color": "#ecedee"
  }, {
    "zoom": 16,
    "color": "#edeeef"
  }, {
    "zoom": 17,
    "color": "#eeeff0"
  }, {
    "zoom": 18,
    "color": "#eeeff0"
  }, {
    "zoom": 19,
    "color": "#eff0f1"
  }, {
    "zoom": 20,
    "color": "#f0f1f2"
  }, {
    "zoom": 21,
    "color": "#f1f2f3"
  }]
}, {
  "tags": {
    "any": "structure",
    "none": ["building", "fence"]
  },
  "elements": "geometry",
  "stylers": [{
    "opacity": 0.9
  }, {
    "zoom": 0,
    "color": "#e1e3e5"
  }, {
    "zoom": 1,
    "color": "#e1e3e5"
  }, {
    "zoom": 2,
    "color": "#e1e3e5"
  }, {
    "zoom": 3,
    "color": "#e1e3e5"
  }, {
    "zoom": 4,
    "color": "#e1e3e5"
  }, {
    "zoom": 5,
    "color": "#e1e3e5"
  }, {
    "zoom": 6,
    "color": "#e1e3e5"
  }, {
    "zoom": 7,
    "color": "#e1e3e5"
  }, {
    "zoom": 8,
    "color": "#e1e3e5"
  }, {
    "zoom": 9,
    "color": "#e1e3e5"
  }, {
    "zoom": 10,
    "color": "#e1e3e5"
  }, {
    "zoom": 11,
    "color": "#e1e3e5"
  }, {
    "zoom": 12,
    "color": "#e1e3e5"
  }, {
    "zoom": 13,
    "color": "#e1e3e5"
  }, {
    "zoom": 14,
    "color": "#e6e8e9"
  }, {
    "zoom": 15,
    "color": "#ecedee"
  }, {
    "zoom": 16,
    "color": "#edeeef"
  }, {
    "zoom": 17,
    "color": "#eeeff0"
  }, {
    "zoom": 18,
    "color": "#eeeff0"
  }, {
    "zoom": 19,
    "color": "#eff0f1"
  }, {
    "zoom": 20,
    "color": "#f0f1f2"
  }, {
    "zoom": 21,
    "color": "#f1f2f3"
  }]
}, {
  "tags": "building",
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#dee0e3"
  }, {
    "zoom": 0,
    "opacity": 0.7
  }, {
    "zoom": 1,
    "opacity": 0.7
  }, {
    "zoom": 2,
    "opacity": 0.7
  }, {
    "zoom": 3,
    "opacity": 0.7
  }, {
    "zoom": 4,
    "opacity": 0.7
  }, {
    "zoom": 5,
    "opacity": 0.7
  }, {
    "zoom": 6,
    "opacity": 0.7
  }, {
    "zoom": 7,
    "opacity": 0.7
  }, {
    "zoom": 8,
    "opacity": 0.7
  }, {
    "zoom": 9,
    "opacity": 0.7
  }, {
    "zoom": 10,
    "opacity": 0.7
  }, {
    "zoom": 11,
    "opacity": 0.7
  }, {
    "zoom": 12,
    "opacity": 0.7
  }, {
    "zoom": 13,
    "opacity": 0.7
  }, {
    "zoom": 14,
    "opacity": 0.7
  }, {
    "zoom": 15,
    "opacity": 0.7
  }, {
    "zoom": 16,
    "opacity": 0.9
  }, {
    "zoom": 17,
    "opacity": 0.6
  }, {
    "zoom": 18,
    "opacity": 0.6
  }, {
    "zoom": 19,
    "opacity": 0.6
  }, {
    "zoom": 20,
    "opacity": 0.6
  }, {
    "zoom": 21,
    "opacity": 0.6
  }]
}, {
  "tags": "building",
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd1"
  }, {
    "zoom": 0,
    "opacity": 0.5
  }, {
    "zoom": 1,
    "opacity": 0.5
  }, {
    "zoom": 2,
    "opacity": 0.5
  }, {
    "zoom": 3,
    "opacity": 0.5
  }, {
    "zoom": 4,
    "opacity": 0.5
  }, {
    "zoom": 5,
    "opacity": 0.5
  }, {
    "zoom": 6,
    "opacity": 0.5
  }, {
    "zoom": 7,
    "opacity": 0.5
  }, {
    "zoom": 8,
    "opacity": 0.5
  }, {
    "zoom": 9,
    "opacity": 0.5
  }, {
    "zoom": 10,
    "opacity": 0.5
  }, {
    "zoom": 11,
    "opacity": 0.5
  }, {
    "zoom": 12,
    "opacity": 0.5
  }, {
    "zoom": 13,
    "opacity": 0.5
  }, {
    "zoom": 14,
    "opacity": 0.5
  }, {
    "zoom": 15,
    "opacity": 0.5
  }, {
    "zoom": 16,
    "opacity": 0.5
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": {
    "any": "urban_area",
    "none": ["residential", "industrial", "cemetery", "park", "medical", "sports_ground", "beach", "construction_site"]
  },
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 1,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 2,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 3,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 4,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 5,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 6,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 7,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 8,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 9,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 10,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 11,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 12,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 13,
    "color": "#d6d9dc",
    "opacity": 1
  }, {
    "zoom": 14,
    "color": "#dddfe2",
    "opacity": 1
  }, {
    "zoom": 15,
    "color": "#e4e6e8",
    "opacity": 1
  }, {
    "zoom": 16,
    "color": "#ebeced",
    "opacity": 0.67
  }, {
    "zoom": 17,
    "color": "#f2f3f3",
    "opacity": 0.33
  }, {
    "zoom": 18,
    "color": "#f2f3f3",
    "opacity": 0
  }, {
    "zoom": 19,
    "color": "#f2f3f3",
    "opacity": 0
  }, {
    "zoom": 20,
    "color": "#f2f3f3",
    "opacity": 0
  }, {
    "zoom": 21,
    "color": "#f2f3f3",
    "opacity": 0
  }]
}, {
  "tags": "poi",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "poi",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "poi",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "outdoor",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "outdoor",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "outdoor",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "park",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "park",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "park",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "cemetery",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "cemetery",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "cemetery",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "beach",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "beach",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "beach",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "medical",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "medical",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "medical",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "shopping",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "shopping",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "shopping",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "commercial_services",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "commercial_services",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "commercial_services",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "food_and_drink",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "food_and_drink",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "food_and_drink",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "road",
  "elements": "label.icon",
  "types": "point",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }, {
    "tertiary-color": "#ffffff"
  }]
}, {
  "tags": "road",
  "elements": "label.text.fill",
  "types": "point",
  "stylers": [{
    "color": "#ffffff"
  }]
}, {
  "tags": "entrance",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }]
}, {
  "tags": "locality",
  "elements": "label.icon",
  "stylers": [{
    "color": "#9da6af"
  }, {
    "secondary-color": "#ffffff"
  }]
}, {
  "tags": "country",
  "elements": "label.text.fill",
  "stylers": [{
    "opacity": 0.8
  }, {
    "color": "#8f969e"
  }]
}, {
  "tags": "country",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "region",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#8f969e"
  }, {
    "opacity": 0.8
  }]
}, {
  "tags": "region",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "district",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#8f969e"
  }, {
    "opacity": 0.8
  }]
}, {
  "tags": "district",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": {
    "any": "admin",
    "none": ["country", "region", "locality", "district", "address"]
  },
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#8f969e"
  }]
}, {
  "tags": {
    "any": "admin",
    "none": ["country", "region", "locality", "district", "address"]
  },
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "locality",
  "elements": "label.text.fill",
  "stylers": [{
    "zoom": 0,
    "color": "#778088"
  }, {
    "zoom": 1,
    "color": "#778088"
  }, {
    "zoom": 2,
    "color": "#778088"
  }, {
    "zoom": 3,
    "color": "#778088"
  }, {
    "zoom": 4,
    "color": "#778088"
  }, {
    "zoom": 5,
    "color": "#757e86"
  }, {
    "zoom": 6,
    "color": "#737c83"
  }, {
    "zoom": 7,
    "color": "#717a81"
  }, {
    "zoom": 8,
    "color": "#6f777f"
  }, {
    "zoom": 9,
    "color": "#6d757c"
  }, {
    "zoom": 10,
    "color": "#6b737a"
  }, {
    "zoom": 11,
    "color": "#6b737a"
  }, {
    "zoom": 12,
    "color": "#6b737a"
  }, {
    "zoom": 13,
    "color": "#6b737a"
  }, {
    "zoom": 14,
    "color": "#6b737a"
  }, {
    "zoom": 15,
    "color": "#6b737a"
  }, {
    "zoom": 16,
    "color": "#6b737a"
  }, {
    "zoom": 17,
    "color": "#6b737a"
  }, {
    "zoom": 18,
    "color": "#6b737a"
  }, {
    "zoom": 19,
    "color": "#6b737a"
  }, {
    "zoom": 20,
    "color": "#6b737a"
  }, {
    "zoom": 21,
    "color": "#6b737a"
  }]
}, {
  "tags": "locality",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "road",
  "elements": "label.text.fill",
  "types": "polyline",
  "stylers": [{
    "color": "#778088"
  }]
}, {
  "tags": "road",
  "elements": "label.text.outline",
  "types": "polyline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "road",
  "elements": "geometry.fill.pattern",
  "types": "polyline",
  "stylers": [{
    "scale": 1
  }, {
    "color": "#adb3b8"
  }]
}, {
  "tags": "road",
  "elements": "label.text.fill",
  "types": "point",
  "stylers": [{
    "color": "#ffffff"
  }]
}, {
  "tags": "structure",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#5f666d"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "structure",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "entrance",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#5f666d"
  }, {
    "opacity": 1
  }]
}, {
  "tags": "entrance",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "address",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#5f666d"
  }, {
    "zoom": 0,
    "opacity": 0.9
  }, {
    "zoom": 1,
    "opacity": 0.9
  }, {
    "zoom": 2,
    "opacity": 0.9
  }, {
    "zoom": 3,
    "opacity": 0.9
  }, {
    "zoom": 4,
    "opacity": 0.9
  }, {
    "zoom": 5,
    "opacity": 0.9
  }, {
    "zoom": 6,
    "opacity": 0.9
  }, {
    "zoom": 7,
    "opacity": 0.9
  }, {
    "zoom": 8,
    "opacity": 0.9
  }, {
    "zoom": 9,
    "opacity": 0.9
  }, {
    "zoom": 10,
    "opacity": 0.9
  }, {
    "zoom": 11,
    "opacity": 0.9
  }, {
    "zoom": 12,
    "opacity": 0.9
  }, {
    "zoom": 13,
    "opacity": 0.9
  }, {
    "zoom": 14,
    "opacity": 0.9
  }, {
    "zoom": 15,
    "opacity": 0.9
  }, {
    "zoom": 16,
    "opacity": 0.9
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": "address",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.5
  }]
}, {
  "tags": "landscape",
  "elements": "label.text.fill",
  "stylers": [{
    "zoom": 0,
    "color": "#8f969e",
    "opacity": 1
  }, {
    "zoom": 1,
    "color": "#8f969e",
    "opacity": 1
  }, {
    "zoom": 2,
    "color": "#8f969e",
    "opacity": 1
  }, {
    "zoom": 3,
    "color": "#8f969e",
    "opacity": 1
  }, {
    "zoom": 4,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 5,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 6,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 7,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 8,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 9,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 10,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 11,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 12,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 13,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 14,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 15,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 16,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 17,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 18,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 19,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 20,
    "color": "#5f666d",
    "opacity": 0.5
  }, {
    "zoom": 21,
    "color": "#5f666d",
    "opacity": 0.5
  }]
}, {
  "tags": "landscape",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "opacity": 0.5
  }, {
    "zoom": 1,
    "opacity": 0.5
  }, {
    "zoom": 2,
    "opacity": 0.5
  }, {
    "zoom": 3,
    "opacity": 0.5
  }, {
    "zoom": 4,
    "opacity": 0
  }, {
    "zoom": 5,
    "opacity": 0
  }, {
    "zoom": 6,
    "opacity": 0
  }, {
    "zoom": 7,
    "opacity": 0
  }, {
    "zoom": 8,
    "opacity": 0
  }, {
    "zoom": 9,
    "opacity": 0
  }, {
    "zoom": 10,
    "opacity": 0
  }, {
    "zoom": 11,
    "opacity": 0
  }, {
    "zoom": 12,
    "opacity": 0
  }, {
    "zoom": 13,
    "opacity": 0
  }, {
    "zoom": 14,
    "opacity": 0
  }, {
    "zoom": 15,
    "opacity": 0
  }, {
    "zoom": 16,
    "opacity": 0
  }, {
    "zoom": 17,
    "opacity": 0
  }, {
    "zoom": 18,
    "opacity": 0
  }, {
    "zoom": 19,
    "opacity": 0
  }, {
    "zoom": 20,
    "opacity": 0
  }, {
    "zoom": 21,
    "opacity": 0
  }]
}, {
  "tags": "water",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#5e6871"
  }, {
    "opacity": 0.8
  }]
}, {
  "tags": "water",
  "elements": "label.text.outline",
  "types": "polyline",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "opacity": 0.2
  }]
}, {
  "tags": {
    "any": "road_1",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 3.3
  }, {
    "zoom": 7,
    "scale": 3.55
  }, {
    "zoom": 8,
    "scale": 3.92
  }, {
    "zoom": 9,
    "scale": 4.44
  }, {
    "zoom": 10,
    "scale": 4.01
  }, {
    "zoom": 11,
    "scale": 3.39
  }, {
    "zoom": 12,
    "scale": 2.94
  }, {
    "zoom": 13,
    "scale": 2.53
  }, {
    "zoom": 14,
    "scale": 2.26
  }, {
    "zoom": 15,
    "scale": 2.11
  }, {
    "zoom": 16,
    "scale": 2.07
  }, {
    "zoom": 17,
    "scale": 1.64
  }, {
    "zoom": 18,
    "scale": 1.35
  }, {
    "zoom": 19,
    "scale": 1.16
  }, {
    "zoom": 20,
    "scale": 1.05
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": {
    "any": "road_1"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 1
  }, {
    "zoom": 1,
    "scale": 1
  }, {
    "zoom": 2,
    "scale": 1
  }, {
    "zoom": 3,
    "scale": 1
  }, {
    "zoom": 4,
    "scale": 1
  }, {
    "zoom": 5,
    "scale": 1
  }, {
    "zoom": 6,
    "scale": 2.18
  }, {
    "zoom": 7,
    "scale": 2.18
  }, {
    "zoom": 8,
    "scale": 2.25
  }, {
    "zoom": 9,
    "scale": 2.4
  }, {
    "zoom": 10,
    "scale": 2.4
  }, {
    "zoom": 11,
    "scale": 2.26
  }, {
    "zoom": 12,
    "scale": 2.15
  }, {
    "zoom": 13,
    "scale": 2
  }, {
    "zoom": 14,
    "scale": 1.9
  }, {
    "zoom": 15,
    "scale": 1.86
  }, {
    "zoom": 16,
    "scale": 1.88
  }, {
    "zoom": 17,
    "scale": 1.53
  }, {
    "zoom": 18,
    "scale": 1.28
  }, {
    "zoom": 19,
    "scale": 1.11
  }, {
    "zoom": 20,
    "scale": 1.01
  }, {
    "zoom": 21,
    "scale": 0.96
  }]
}, {
  "tags": {
    "any": "road_2",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 3.3
  }, {
    "zoom": 7,
    "scale": 3.55
  }, {
    "zoom": 8,
    "scale": 3.92
  }, {
    "zoom": 9,
    "scale": 4.44
  }, {
    "zoom": 10,
    "scale": 4.01
  }, {
    "zoom": 11,
    "scale": 3.39
  }, {
    "zoom": 12,
    "scale": 2.94
  }, {
    "zoom": 13,
    "scale": 2.53
  }, {
    "zoom": 14,
    "scale": 2.26
  }, {
    "zoom": 15,
    "scale": 2.11
  }, {
    "zoom": 16,
    "scale": 2.07
  }, {
    "zoom": 17,
    "scale": 1.64
  }, {
    "zoom": 18,
    "scale": 1.35
  }, {
    "zoom": 19,
    "scale": 1.16
  }, {
    "zoom": 20,
    "scale": 1.05
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": {
    "any": "road_2"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 1
  }, {
    "zoom": 1,
    "scale": 1
  }, {
    "zoom": 2,
    "scale": 1
  }, {
    "zoom": 3,
    "scale": 1
  }, {
    "zoom": 4,
    "scale": 1
  }, {
    "zoom": 5,
    "scale": 1
  }, {
    "zoom": 6,
    "scale": 2.18
  }, {
    "zoom": 7,
    "scale": 2.18
  }, {
    "zoom": 8,
    "scale": 2.25
  }, {
    "zoom": 9,
    "scale": 2.4
  }, {
    "zoom": 10,
    "scale": 2.4
  }, {
    "zoom": 11,
    "scale": 2.26
  }, {
    "zoom": 12,
    "scale": 2.15
  }, {
    "zoom": 13,
    "scale": 2
  }, {
    "zoom": 14,
    "scale": 1.9
  }, {
    "zoom": 15,
    "scale": 1.86
  }, {
    "zoom": 16,
    "scale": 1.88
  }, {
    "zoom": 17,
    "scale": 1.53
  }, {
    "zoom": 18,
    "scale": 1.28
  }, {
    "zoom": 19,
    "scale": 1.11
  }, {
    "zoom": 20,
    "scale": 1.01
  }, {
    "zoom": 21,
    "scale": 0.96
  }]
}, {
  "tags": {
    "any": "road_3",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 0
  }, {
    "zoom": 7,
    "scale": 0
  }, {
    "zoom": 8,
    "scale": 0
  }, {
    "zoom": 9,
    "scale": 2.79
  }, {
    "zoom": 10,
    "scale": 2.91
  }, {
    "zoom": 11,
    "scale": 1.86
  }, {
    "zoom": 12,
    "scale": 1.86
  }, {
    "zoom": 13,
    "scale": 1.54
  }, {
    "zoom": 14,
    "scale": 1.32
  }, {
    "zoom": 15,
    "scale": 1.2
  }, {
    "zoom": 16,
    "scale": 1.15
  }, {
    "zoom": 17,
    "scale": 1.01
  }, {
    "zoom": 18,
    "scale": 0.93
  }, {
    "zoom": 19,
    "scale": 0.91
  }, {
    "zoom": 20,
    "scale": 0.93
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": {
    "any": "road_3"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 1.14
  }, {
    "zoom": 1,
    "scale": 1.14
  }, {
    "zoom": 2,
    "scale": 1.14
  }, {
    "zoom": 3,
    "scale": 1.14
  }, {
    "zoom": 4,
    "scale": 1.14
  }, {
    "zoom": 5,
    "scale": 1.14
  }, {
    "zoom": 6,
    "scale": 1.14
  }, {
    "zoom": 7,
    "scale": 1.14
  }, {
    "zoom": 8,
    "scale": 0.92
  }, {
    "zoom": 9,
    "scale": 3.01
  }, {
    "zoom": 10,
    "scale": 1.95
  }, {
    "zoom": 11,
    "scale": 1.46
  }, {
    "zoom": 12,
    "scale": 1.52
  }, {
    "zoom": 13,
    "scale": 1.35
  }, {
    "zoom": 14,
    "scale": 1.22
  }, {
    "zoom": 15,
    "scale": 1.14
  }, {
    "zoom": 16,
    "scale": 1.11
  }, {
    "zoom": 17,
    "scale": 0.98
  }, {
    "zoom": 18,
    "scale": 0.9
  }, {
    "zoom": 19,
    "scale": 0.88
  }, {
    "zoom": 20,
    "scale": 0.9
  }, {
    "zoom": 21,
    "scale": 0.96
  }]
}, {
  "tags": {
    "any": "road_4",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 0
  }, {
    "zoom": 7,
    "scale": 0
  }, {
    "zoom": 8,
    "scale": 0
  }, {
    "zoom": 9,
    "scale": 0
  }, {
    "zoom": 10,
    "scale": 1.88
  }, {
    "zoom": 11,
    "scale": 1.4
  }, {
    "zoom": 12,
    "scale": 1.57
  }, {
    "zoom": 13,
    "scale": 1.32
  }, {
    "zoom": 14,
    "scale": 1.16
  }, {
    "zoom": 15,
    "scale": 1.07
  }, {
    "zoom": 16,
    "scale": 1.28
  }, {
    "zoom": 17,
    "scale": 1.1
  }, {
    "zoom": 18,
    "scale": 0.99
  }, {
    "zoom": 19,
    "scale": 0.94
  }, {
    "zoom": 20,
    "scale": 0.95
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": {
    "any": "road_4"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 1
  }, {
    "zoom": 1,
    "scale": 1
  }, {
    "zoom": 2,
    "scale": 1
  }, {
    "zoom": 3,
    "scale": 1
  }, {
    "zoom": 4,
    "scale": 1
  }, {
    "zoom": 5,
    "scale": 1
  }, {
    "zoom": 6,
    "scale": 1
  }, {
    "zoom": 7,
    "scale": 1
  }, {
    "zoom": 8,
    "scale": 1
  }, {
    "zoom": 9,
    "scale": 0.8
  }, {
    "zoom": 10,
    "scale": 1.36
  }, {
    "zoom": 11,
    "scale": 1.15
  }, {
    "zoom": 12,
    "scale": 1.3
  }, {
    "zoom": 13,
    "scale": 1.17
  }, {
    "zoom": 14,
    "scale": 1.08
  }, {
    "zoom": 15,
    "scale": 1.03
  }, {
    "zoom": 16,
    "scale": 1.21
  }, {
    "zoom": 17,
    "scale": 1.05
  }, {
    "zoom": 18,
    "scale": 0.96
  }, {
    "zoom": 19,
    "scale": 0.91
  }, {
    "zoom": 20,
    "scale": 0.91
  }, {
    "zoom": 21,
    "scale": 0.96
  }]
}, {
  "tags": {
    "any": "road_5",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 0
  }, {
    "zoom": 7,
    "scale": 0
  }, {
    "zoom": 8,
    "scale": 0
  }, {
    "zoom": 9,
    "scale": 0
  }, {
    "zoom": 10,
    "scale": 0
  }, {
    "zoom": 11,
    "scale": 0
  }, {
    "zoom": 12,
    "scale": 1.39
  }, {
    "zoom": 13,
    "scale": 1.05
  }, {
    "zoom": 14,
    "scale": 0.9
  }, {
    "zoom": 15,
    "scale": 1.05
  }, {
    "zoom": 16,
    "scale": 1.22
  }, {
    "zoom": 17,
    "scale": 1.04
  }, {
    "zoom": 18,
    "scale": 0.94
  }, {
    "zoom": 19,
    "scale": 0.91
  }, {
    "zoom": 20,
    "scale": 0.93
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": {
    "any": "road_5"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 1
  }, {
    "zoom": 1,
    "scale": 1
  }, {
    "zoom": 2,
    "scale": 1
  }, {
    "zoom": 3,
    "scale": 1
  }, {
    "zoom": 4,
    "scale": 1
  }, {
    "zoom": 5,
    "scale": 1
  }, {
    "zoom": 6,
    "scale": 1
  }, {
    "zoom": 7,
    "scale": 1
  }, {
    "zoom": 8,
    "scale": 1
  }, {
    "zoom": 9,
    "scale": 1
  }, {
    "zoom": 10,
    "scale": 1
  }, {
    "zoom": 11,
    "scale": 0.44
  }, {
    "zoom": 12,
    "scale": 1.15
  }, {
    "zoom": 13,
    "scale": 0.97
  }, {
    "zoom": 14,
    "scale": 0.87
  }, {
    "zoom": 15,
    "scale": 1.01
  }, {
    "zoom": 16,
    "scale": 1.16
  }, {
    "zoom": 17,
    "scale": 1
  }, {
    "zoom": 18,
    "scale": 0.91
  }, {
    "zoom": 19,
    "scale": 0.88
  }, {
    "zoom": 20,
    "scale": 0.89
  }, {
    "zoom": 21,
    "scale": 0.96
  }]
}, {
  "tags": {
    "any": "road_6",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 0
  }, {
    "zoom": 7,
    "scale": 0
  }, {
    "zoom": 8,
    "scale": 0
  }, {
    "zoom": 9,
    "scale": 0
  }, {
    "zoom": 10,
    "scale": 0
  }, {
    "zoom": 11,
    "scale": 0
  }, {
    "zoom": 12,
    "scale": 0
  }, {
    "zoom": 13,
    "scale": 2.5
  }, {
    "zoom": 14,
    "scale": 1.41
  }, {
    "zoom": 15,
    "scale": 1.39
  }, {
    "zoom": 16,
    "scale": 1.45
  }, {
    "zoom": 17,
    "scale": 1.16
  }, {
    "zoom": 18,
    "scale": 1
  }, {
    "zoom": 19,
    "scale": 0.94
  }, {
    "zoom": 20,
    "scale": 0.94
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": {
    "any": "road_6"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 1
  }, {
    "zoom": 1,
    "scale": 1
  }, {
    "zoom": 2,
    "scale": 1
  }, {
    "zoom": 3,
    "scale": 1
  }, {
    "zoom": 4,
    "scale": 1
  }, {
    "zoom": 5,
    "scale": 1
  }, {
    "zoom": 6,
    "scale": 1
  }, {
    "zoom": 7,
    "scale": 1
  }, {
    "zoom": 8,
    "scale": 1
  }, {
    "zoom": 9,
    "scale": 1
  }, {
    "zoom": 10,
    "scale": 1
  }, {
    "zoom": 11,
    "scale": 1
  }, {
    "zoom": 12,
    "scale": 1
  }, {
    "zoom": 13,
    "scale": 1.65
  }, {
    "zoom": 14,
    "scale": 1.21
  }, {
    "zoom": 15,
    "scale": 1.26
  }, {
    "zoom": 16,
    "scale": 1.35
  }, {
    "zoom": 17,
    "scale": 1.1
  }, {
    "zoom": 18,
    "scale": 0.97
  }, {
    "zoom": 19,
    "scale": 0.91
  }, {
    "zoom": 20,
    "scale": 0.91
  }, {
    "zoom": 21,
    "scale": 0.96
  }]
}, {
  "tags": {
    "any": "road_7",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 0
  }, {
    "zoom": 7,
    "scale": 0
  }, {
    "zoom": 8,
    "scale": 0
  }, {
    "zoom": 9,
    "scale": 0
  }, {
    "zoom": 10,
    "scale": 0
  }, {
    "zoom": 11,
    "scale": 0
  }, {
    "zoom": 12,
    "scale": 0
  }, {
    "zoom": 13,
    "scale": 0
  }, {
    "zoom": 14,
    "scale": 1
  }, {
    "zoom": 15,
    "scale": 0.87
  }, {
    "zoom": 16,
    "scale": 0.97
  }, {
    "zoom": 17,
    "scale": 0.89
  }, {
    "zoom": 18,
    "scale": 0.86
  }, {
    "zoom": 19,
    "scale": 0.88
  }, {
    "zoom": 20,
    "scale": 0.92
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": {
    "any": "road_7"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 1
  }, {
    "zoom": 1,
    "scale": 1
  }, {
    "zoom": 2,
    "scale": 1
  }, {
    "zoom": 3,
    "scale": 1
  }, {
    "zoom": 4,
    "scale": 1
  }, {
    "zoom": 5,
    "scale": 1
  }, {
    "zoom": 6,
    "scale": 1
  }, {
    "zoom": 7,
    "scale": 1
  }, {
    "zoom": 8,
    "scale": 1
  }, {
    "zoom": 9,
    "scale": 1
  }, {
    "zoom": 10,
    "scale": 1
  }, {
    "zoom": 11,
    "scale": 1
  }, {
    "zoom": 12,
    "scale": 1
  }, {
    "zoom": 13,
    "scale": 1
  }, {
    "zoom": 14,
    "scale": 0.93
  }, {
    "zoom": 15,
    "scale": 0.85
  }, {
    "zoom": 16,
    "scale": 0.94
  }, {
    "zoom": 17,
    "scale": 0.86
  }, {
    "zoom": 18,
    "scale": 0.83
  }, {
    "zoom": 19,
    "scale": 0.84
  }, {
    "zoom": 20,
    "scale": 0.88
  }, {
    "zoom": 21,
    "scale": 0.95
  }]
}, {
  "tags": {
    "any": "road_minor",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 0
  }, {
    "zoom": 7,
    "scale": 0
  }, {
    "zoom": 8,
    "scale": 0
  }, {
    "zoom": 9,
    "scale": 0
  }, {
    "zoom": 10,
    "scale": 0
  }, {
    "zoom": 11,
    "scale": 0
  }, {
    "zoom": 12,
    "scale": 0
  }, {
    "zoom": 13,
    "scale": 0
  }, {
    "zoom": 14,
    "scale": 0
  }, {
    "zoom": 15,
    "scale": 0
  }, {
    "zoom": 16,
    "scale": 1
  }, {
    "zoom": 17,
    "scale": 1
  }, {
    "zoom": 18,
    "scale": 1
  }, {
    "zoom": 19,
    "scale": 1
  }, {
    "zoom": 20,
    "scale": 1
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": {
    "any": "road_minor"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 0.29
  }, {
    "zoom": 1,
    "scale": 0.29
  }, {
    "zoom": 2,
    "scale": 0.29
  }, {
    "zoom": 3,
    "scale": 0.29
  }, {
    "zoom": 4,
    "scale": 0.29
  }, {
    "zoom": 5,
    "scale": 0.29
  }, {
    "zoom": 6,
    "scale": 0.29
  }, {
    "zoom": 7,
    "scale": 0.29
  }, {
    "zoom": 8,
    "scale": 0.29
  }, {
    "zoom": 9,
    "scale": 0.29
  }, {
    "zoom": 10,
    "scale": 0.29
  }, {
    "zoom": 11,
    "scale": 0.29
  }, {
    "zoom": 12,
    "scale": 0.29
  }, {
    "zoom": 13,
    "scale": 0.29
  }, {
    "zoom": 14,
    "scale": 0.29
  }, {
    "zoom": 15,
    "scale": 0.29
  }, {
    "zoom": 16,
    "scale": 1
  }, {
    "zoom": 17,
    "scale": 0.9
  }, {
    "zoom": 18,
    "scale": 0.91
  }, {
    "zoom": 19,
    "scale": 0.92
  }, {
    "zoom": 20,
    "scale": 0.93
  }, {
    "zoom": 21,
    "scale": 0.95
  }]
}, {
  "tags": {
    "any": "road_unclassified",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 0
  }, {
    "zoom": 7,
    "scale": 0
  }, {
    "zoom": 8,
    "scale": 0
  }, {
    "zoom": 9,
    "scale": 0
  }, {
    "zoom": 10,
    "scale": 0
  }, {
    "zoom": 11,
    "scale": 0
  }, {
    "zoom": 12,
    "scale": 0
  }, {
    "zoom": 13,
    "scale": 0
  }, {
    "zoom": 14,
    "scale": 0
  }, {
    "zoom": 15,
    "scale": 0
  }, {
    "zoom": 16,
    "scale": 1
  }, {
    "zoom": 17,
    "scale": 1
  }, {
    "zoom": 18,
    "scale": 1
  }, {
    "zoom": 19,
    "scale": 1
  }, {
    "zoom": 20,
    "scale": 1
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": {
    "any": "road_unclassified"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 0.29
  }, {
    "zoom": 1,
    "scale": 0.29
  }, {
    "zoom": 2,
    "scale": 0.29
  }, {
    "zoom": 3,
    "scale": 0.29
  }, {
    "zoom": 4,
    "scale": 0.29
  }, {
    "zoom": 5,
    "scale": 0.29
  }, {
    "zoom": 6,
    "scale": 0.29
  }, {
    "zoom": 7,
    "scale": 0.29
  }, {
    "zoom": 8,
    "scale": 0.29
  }, {
    "zoom": 9,
    "scale": 0.29
  }, {
    "zoom": 10,
    "scale": 0.29
  }, {
    "zoom": 11,
    "scale": 0.29
  }, {
    "zoom": 12,
    "scale": 0.29
  }, {
    "zoom": 13,
    "scale": 0.29
  }, {
    "zoom": 14,
    "scale": 0.29
  }, {
    "zoom": 15,
    "scale": 0.29
  }, {
    "zoom": 16,
    "scale": 1
  }, {
    "zoom": 17,
    "scale": 0.9
  }, {
    "zoom": 18,
    "scale": 0.91
  }, {
    "zoom": 19,
    "scale": 0.92
  }, {
    "zoom": 20,
    "scale": 0.93
  }, {
    "zoom": 21,
    "scale": 0.95
  }]
}, {
  "tags": {
    "all": "is_tunnel",
    "none": "path"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "zoom": 0,
    "color": "#dcdee0"
  }, {
    "zoom": 1,
    "color": "#dcdee0"
  }, {
    "zoom": 2,
    "color": "#dcdee0"
  }, {
    "zoom": 3,
    "color": "#dcdee0"
  }, {
    "zoom": 4,
    "color": "#dcdee0"
  }, {
    "zoom": 5,
    "color": "#dcdee0"
  }, {
    "zoom": 6,
    "color": "#dcdee0"
  }, {
    "zoom": 7,
    "color": "#dcdee0"
  }, {
    "zoom": 8,
    "color": "#dcdee0"
  }, {
    "zoom": 9,
    "color": "#dcdee0"
  }, {
    "zoom": 10,
    "color": "#dcdee0"
  }, {
    "zoom": 11,
    "color": "#dcdee0"
  }, {
    "zoom": 12,
    "color": "#dcdee0"
  }, {
    "zoom": 13,
    "color": "#dcdee0"
  }, {
    "zoom": 14,
    "color": "#e1e3e5"
  }, {
    "zoom": 15,
    "color": "#e6e8ea"
  }, {
    "zoom": 16,
    "color": "#e7e9eb"
  }, {
    "zoom": 17,
    "color": "#e8eaeb"
  }, {
    "zoom": 18,
    "color": "#e9eaec"
  }, {
    "zoom": 19,
    "color": "#eaebed"
  }, {
    "zoom": 20,
    "color": "#ebeced"
  }, {
    "zoom": 21,
    "color": "#ecedee"
  }]
}, {
  "tags": {
    "all": "path",
    "none": "is_tunnel"
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#c8ccd0"
  }]
}, {
  "tags": {
    "all": "path",
    "none": "is_tunnel"
  },
  "elements": "geometry.outline",
  "stylers": [{
    "opacity": 0.7
  }, {
    "zoom": 0,
    "color": "#e1e3e5"
  }, {
    "zoom": 1,
    "color": "#e1e3e5"
  }, {
    "zoom": 2,
    "color": "#e1e3e5"
  }, {
    "zoom": 3,
    "color": "#e1e3e5"
  }, {
    "zoom": 4,
    "color": "#e1e3e5"
  }, {
    "zoom": 5,
    "color": "#e1e3e5"
  }, {
    "zoom": 6,
    "color": "#e1e3e5"
  }, {
    "zoom": 7,
    "color": "#e1e3e5"
  }, {
    "zoom": 8,
    "color": "#e1e3e5"
  }, {
    "zoom": 9,
    "color": "#e1e3e5"
  }, {
    "zoom": 10,
    "color": "#e1e3e5"
  }, {
    "zoom": 11,
    "color": "#e1e3e5"
  }, {
    "zoom": 12,
    "color": "#e1e3e5"
  }, {
    "zoom": 13,
    "color": "#e1e3e5"
  }, {
    "zoom": 14,
    "color": "#e6e8e9"
  }, {
    "zoom": 15,
    "color": "#ecedee"
  }, {
    "zoom": 16,
    "color": "#edeeef"
  }, {
    "zoom": 17,
    "color": "#eeeff0"
  }, {
    "zoom": 18,
    "color": "#eeeff0"
  }, {
    "zoom": 19,
    "color": "#eff0f1"
  }, {
    "zoom": 20,
    "color": "#f0f1f2"
  }, {
    "zoom": 21,
    "color": "#f1f2f3"
  }]
}, {
  "tags": "road_construction",
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#ffffff"
  }]
}, {
  "tags": "road_construction",
  "elements": "geometry.outline",
  "stylers": [{
    "zoom": 0,
    "color": "#e4e6e8"
  }, {
    "zoom": 1,
    "color": "#e4e6e8"
  }, {
    "zoom": 2,
    "color": "#e4e6e8"
  }, {
    "zoom": 3,
    "color": "#e4e6e8"
  }, {
    "zoom": 4,
    "color": "#e4e6e8"
  }, {
    "zoom": 5,
    "color": "#e4e6e8"
  }, {
    "zoom": 6,
    "color": "#e4e6e8"
  }, {
    "zoom": 7,
    "color": "#e4e6e8"
  }, {
    "zoom": 8,
    "color": "#e4e6e8"
  }, {
    "zoom": 9,
    "color": "#e4e6e8"
  }, {
    "zoom": 10,
    "color": "#e4e6e8"
  }, {
    "zoom": 11,
    "color": "#e4e6e8"
  }, {
    "zoom": 12,
    "color": "#e4e6e8"
  }, {
    "zoom": 13,
    "color": "#e4e6e8"
  }, {
    "zoom": 14,
    "color": "#c8ccd0"
  }, {
    "zoom": 15,
    "color": "#e4e6e8"
  }, {
    "zoom": 16,
    "color": "#e8eaec"
  }, {
    "zoom": 17,
    "color": "#edeef0"
  }, {
    "zoom": 18,
    "color": "#f1f2f3"
  }, {
    "zoom": 19,
    "color": "#f6f7f7"
  }, {
    "zoom": 20,
    "color": "#fafbfb"
  }, {
    "zoom": 21,
    "color": "#ffffff"
  }]
}, {
  "tags": {
    "any": "ferry"
  },
  "stylers": [{
    "color": "#919ba4"
  }]
}, {
  "tags": "transit_location",
  "elements": "label.icon",
  "stylers": [{
    "saturation": -1
  }, {
    "zoom": 0,
    "opacity": 0
  }, {
    "zoom": 1,
    "opacity": 0
  }, {
    "zoom": 2,
    "opacity": 0
  }, {
    "zoom": 3,
    "opacity": 0
  }, {
    "zoom": 4,
    "opacity": 0
  }, {
    "zoom": 5,
    "opacity": 0
  }, {
    "zoom": 6,
    "opacity": 0
  }, {
    "zoom": 7,
    "opacity": 0
  }, {
    "zoom": 8,
    "opacity": 0
  }, {
    "zoom": 9,
    "opacity": 0
  }, {
    "zoom": 10,
    "opacity": 0
  }, {
    "zoom": 11,
    "opacity": 0
  }, {
    "zoom": 12,
    "opacity": 0
  }, {
    "zoom": 13,
    "opacity": 1
  }, {
    "zoom": 14,
    "opacity": 1
  }, {
    "zoom": 15,
    "opacity": 1
  }, {
    "zoom": 16,
    "opacity": 1
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": "transit_location",
  "elements": "label.text",
  "stylers": [{
    "zoom": 0,
    "opacity": 0
  }, {
    "zoom": 1,
    "opacity": 0
  }, {
    "zoom": 2,
    "opacity": 0
  }, {
    "zoom": 3,
    "opacity": 0
  }, {
    "zoom": 4,
    "opacity": 0
  }, {
    "zoom": 5,
    "opacity": 0
  }, {
    "zoom": 6,
    "opacity": 0
  }, {
    "zoom": 7,
    "opacity": 0
  }, {
    "zoom": 8,
    "opacity": 0
  }, {
    "zoom": 9,
    "opacity": 0
  }, {
    "zoom": 10,
    "opacity": 0
  }, {
    "zoom": 11,
    "opacity": 0
  }, {
    "zoom": 12,
    "opacity": 0
  }, {
    "zoom": 13,
    "opacity": 1
  }, {
    "zoom": 14,
    "opacity": 1
  }, {
    "zoom": 15,
    "opacity": 1
  }, {
    "zoom": 16,
    "opacity": 1
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": "transit_location",
  "elements": "label.text.fill",
  "stylers": [{
    "color": "#6c8993"
  }]
}, {
  "tags": "transit_location",
  "elements": "label.text.outline",
  "stylers": [{
    "color": "#ffffff"
  }]
}, {
  "tags": "transit_schema",
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#6c8993"
  }, {
    "scale": 0.7
  }, {
    "zoom": 0,
    "opacity": 0.6
  }, {
    "zoom": 1,
    "opacity": 0.6
  }, {
    "zoom": 2,
    "opacity": 0.6
  }, {
    "zoom": 3,
    "opacity": 0.6
  }, {
    "zoom": 4,
    "opacity": 0.6
  }, {
    "zoom": 5,
    "opacity": 0.6
  }, {
    "zoom": 6,
    "opacity": 0.6
  }, {
    "zoom": 7,
    "opacity": 0.6
  }, {
    "zoom": 8,
    "opacity": 0.6
  }, {
    "zoom": 9,
    "opacity": 0.6
  }, {
    "zoom": 10,
    "opacity": 0.6
  }, {
    "zoom": 11,
    "opacity": 0.6
  }, {
    "zoom": 12,
    "opacity": 0.6
  }, {
    "zoom": 13,
    "opacity": 0.6
  }, {
    "zoom": 14,
    "opacity": 0.6
  }, {
    "zoom": 15,
    "opacity": 0.5
  }, {
    "zoom": 16,
    "opacity": 0.4
  }, {
    "zoom": 17,
    "opacity": 0.4
  }, {
    "zoom": 18,
    "opacity": 0.4
  }, {
    "zoom": 19,
    "opacity": 0.4
  }, {
    "zoom": 20,
    "opacity": 0.4
  }, {
    "zoom": 21,
    "opacity": 0.4
  }]
}, {
  "tags": "transit_schema",
  "elements": "geometry.outline",
  "stylers": [{
    "opacity": 0
  }]
}, {
  "tags": "transit_line",
  "elements": "geometry.fill.pattern",
  "stylers": [{
    "color": "#949c9e"
  }, {
    "zoom": 0,
    "opacity": 0
  }, {
    "zoom": 1,
    "opacity": 0
  }, {
    "zoom": 2,
    "opacity": 0
  }, {
    "zoom": 3,
    "opacity": 0
  }, {
    "zoom": 4,
    "opacity": 0
  }, {
    "zoom": 5,
    "opacity": 0
  }, {
    "zoom": 6,
    "opacity": 0
  }, {
    "zoom": 7,
    "opacity": 0
  }, {
    "zoom": 8,
    "opacity": 0
  }, {
    "zoom": 9,
    "opacity": 0
  }, {
    "zoom": 10,
    "opacity": 0
  }, {
    "zoom": 11,
    "opacity": 0
  }, {
    "zoom": 12,
    "opacity": 0
  }, {
    "zoom": 13,
    "opacity": 1
  }, {
    "zoom": 14,
    "opacity": 1
  }, {
    "zoom": 15,
    "opacity": 1
  }, {
    "zoom": 16,
    "opacity": 1
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": "transit_line",
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#949c9e"
  }, {
    "scale": 0.4
  }, {
    "zoom": 0,
    "opacity": 0
  }, {
    "zoom": 1,
    "opacity": 0
  }, {
    "zoom": 2,
    "opacity": 0
  }, {
    "zoom": 3,
    "opacity": 0
  }, {
    "zoom": 4,
    "opacity": 0
  }, {
    "zoom": 5,
    "opacity": 0
  }, {
    "zoom": 6,
    "opacity": 0
  }, {
    "zoom": 7,
    "opacity": 0
  }, {
    "zoom": 8,
    "opacity": 0
  }, {
    "zoom": 9,
    "opacity": 0
  }, {
    "zoom": 10,
    "opacity": 0
  }, {
    "zoom": 11,
    "opacity": 0
  }, {
    "zoom": 12,
    "opacity": 0
  }, {
    "zoom": 13,
    "opacity": 1
  }, {
    "zoom": 14,
    "opacity": 1
  }, {
    "zoom": 15,
    "opacity": 1
  }, {
    "zoom": 16,
    "opacity": 1
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": "water",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#adb4bb"
  }, {
    "zoom": 1,
    "color": "#adb4bb"
  }, {
    "zoom": 2,
    "color": "#adb4bb"
  }, {
    "zoom": 3,
    "color": "#adb4bb"
  }, {
    "zoom": 4,
    "color": "#adb4bb"
  }, {
    "zoom": 5,
    "color": "#adb4bb"
  }, {
    "zoom": 6,
    "color": "#adb4bb"
  }, {
    "zoom": 7,
    "color": "#adb4bb"
  }, {
    "zoom": 8,
    "color": "#afb6bd"
  }, {
    "zoom": 9,
    "color": "#b1b7be"
  }, {
    "zoom": 10,
    "color": "#b3b9c0"
  }, {
    "zoom": 11,
    "color": "#b4bac1"
  }, {
    "zoom": 12,
    "color": "#b4bbc1"
  }, {
    "zoom": 13,
    "color": "#b5bcc2"
  }, {
    "zoom": 14,
    "color": "#b6bdc3"
  }, {
    "zoom": 15,
    "color": "#b8bec4"
  }, {
    "zoom": 16,
    "color": "#b9c0c5"
  }, {
    "zoom": 17,
    "color": "#bbc1c6"
  }, {
    "zoom": 18,
    "color": "#bcc2c8"
  }, {
    "zoom": 19,
    "color": "#bec3c9"
  }, {
    "zoom": 20,
    "color": "#bfc5ca"
  }, {
    "zoom": 21,
    "color": "#c1c6cb"
  }]
}, {
  "tags": "water",
  "elements": "geometry",
  "types": "polyline",
  "stylers": [{
    "zoom": 0,
    "opacity": 0.4
  }, {
    "zoom": 1,
    "opacity": 0.4
  }, {
    "zoom": 2,
    "opacity": 0.4
  }, {
    "zoom": 3,
    "opacity": 0.4
  }, {
    "zoom": 4,
    "opacity": 0.6
  }, {
    "zoom": 5,
    "opacity": 0.8
  }, {
    "zoom": 6,
    "opacity": 1
  }, {
    "zoom": 7,
    "opacity": 1
  }, {
    "zoom": 8,
    "opacity": 1
  }, {
    "zoom": 9,
    "opacity": 1
  }, {
    "zoom": 10,
    "opacity": 1
  }, {
    "zoom": 11,
    "opacity": 1
  }, {
    "zoom": 12,
    "opacity": 1
  }, {
    "zoom": 13,
    "opacity": 1
  }, {
    "zoom": 14,
    "opacity": 1
  }, {
    "zoom": 15,
    "opacity": 1
  }, {
    "zoom": 16,
    "opacity": 1
  }, {
    "zoom": 17,
    "opacity": 1
  }, {
    "zoom": 18,
    "opacity": 1
  }, {
    "zoom": 19,
    "opacity": 1
  }, {
    "zoom": 20,
    "opacity": 1
  }, {
    "zoom": 21,
    "opacity": 1
  }]
}, {
  "tags": "bathymetry",
  "elements": "geometry",
  "stylers": [{
    "hue": "#adb4bb"
  }]
}, {
  "tags": {
    "any": ["industrial", "construction_site"]
  },
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#dcdee0"
  }, {
    "zoom": 1,
    "color": "#dcdee0"
  }, {
    "zoom": 2,
    "color": "#dcdee0"
  }, {
    "zoom": 3,
    "color": "#dcdee0"
  }, {
    "zoom": 4,
    "color": "#dcdee0"
  }, {
    "zoom": 5,
    "color": "#dcdee0"
  }, {
    "zoom": 6,
    "color": "#dcdee0"
  }, {
    "zoom": 7,
    "color": "#dcdee0"
  }, {
    "zoom": 8,
    "color": "#dcdee0"
  }, {
    "zoom": 9,
    "color": "#dcdee0"
  }, {
    "zoom": 10,
    "color": "#dcdee0"
  }, {
    "zoom": 11,
    "color": "#dcdee0"
  }, {
    "zoom": 12,
    "color": "#dcdee0"
  }, {
    "zoom": 13,
    "color": "#dcdee0"
  }, {
    "zoom": 14,
    "color": "#e1e3e5"
  }, {
    "zoom": 15,
    "color": "#e7e8ea"
  }, {
    "zoom": 16,
    "color": "#e8e9eb"
  }, {
    "zoom": 17,
    "color": "#e9eaeb"
  }, {
    "zoom": 18,
    "color": "#e9eaec"
  }, {
    "zoom": 19,
    "color": "#eaebed"
  }, {
    "zoom": 20,
    "color": "#ebeced"
  }, {
    "zoom": 21,
    "color": "#ecedee"
  }]
}, {
  "tags": {
    "any": "transit",
    "none": ["transit_location", "transit_line", "transit_schema", "is_unclassified_transit"]
  },
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#dcdee0"
  }, {
    "zoom": 1,
    "color": "#dcdee0"
  }, {
    "zoom": 2,
    "color": "#dcdee0"
  }, {
    "zoom": 3,
    "color": "#dcdee0"
  }, {
    "zoom": 4,
    "color": "#dcdee0"
  }, {
    "zoom": 5,
    "color": "#dcdee0"
  }, {
    "zoom": 6,
    "color": "#dcdee0"
  }, {
    "zoom": 7,
    "color": "#dcdee0"
  }, {
    "zoom": 8,
    "color": "#dcdee0"
  }, {
    "zoom": 9,
    "color": "#dcdee0"
  }, {
    "zoom": 10,
    "color": "#dcdee0"
  }, {
    "zoom": 11,
    "color": "#dcdee0"
  }, {
    "zoom": 12,
    "color": "#dcdee0"
  }, {
    "zoom": 13,
    "color": "#dcdee0"
  }, {
    "zoom": 14,
    "color": "#e1e3e5"
  }, {
    "zoom": 15,
    "color": "#e7e8ea"
  }, {
    "zoom": 16,
    "color": "#e8e9eb"
  }, {
    "zoom": 17,
    "color": "#e9eaeb"
  }, {
    "zoom": 18,
    "color": "#e9eaec"
  }, {
    "zoom": 19,
    "color": "#eaebed"
  }, {
    "zoom": 20,
    "color": "#ebeced"
  }, {
    "zoom": 21,
    "color": "#ecedee"
  }]
}, {
  "tags": "fence",
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#d1d4d6"
  }, {
    "zoom": 0,
    "opacity": 0.75
  }, {
    "zoom": 1,
    "opacity": 0.75
  }, {
    "zoom": 2,
    "opacity": 0.75
  }, {
    "zoom": 3,
    "opacity": 0.75
  }, {
    "zoom": 4,
    "opacity": 0.75
  }, {
    "zoom": 5,
    "opacity": 0.75
  }, {
    "zoom": 6,
    "opacity": 0.75
  }, {
    "zoom": 7,
    "opacity": 0.75
  }, {
    "zoom": 8,
    "opacity": 0.75
  }, {
    "zoom": 9,
    "opacity": 0.75
  }, {
    "zoom": 10,
    "opacity": 0.75
  }, {
    "zoom": 11,
    "opacity": 0.75
  }, {
    "zoom": 12,
    "opacity": 0.75
  }, {
    "zoom": 13,
    "opacity": 0.75
  }, {
    "zoom": 14,
    "opacity": 0.75
  }, {
    "zoom": 15,
    "opacity": 0.75
  }, {
    "zoom": 16,
    "opacity": 0.75
  }, {
    "zoom": 17,
    "opacity": 0.45
  }, {
    "zoom": 18,
    "opacity": 0.45
  }, {
    "zoom": 19,
    "opacity": 0.45
  }, {
    "zoom": 20,
    "opacity": 0.45
  }, {
    "zoom": 21,
    "opacity": 0.45
  }]
}, {
  "tags": "medical",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#dcdee0"
  }, {
    "zoom": 1,
    "color": "#dcdee0"
  }, {
    "zoom": 2,
    "color": "#dcdee0"
  }, {
    "zoom": 3,
    "color": "#dcdee0"
  }, {
    "zoom": 4,
    "color": "#dcdee0"
  }, {
    "zoom": 5,
    "color": "#dcdee0"
  }, {
    "zoom": 6,
    "color": "#dcdee0"
  }, {
    "zoom": 7,
    "color": "#dcdee0"
  }, {
    "zoom": 8,
    "color": "#dcdee0"
  }, {
    "zoom": 9,
    "color": "#dcdee0"
  }, {
    "zoom": 10,
    "color": "#dcdee0"
  }, {
    "zoom": 11,
    "color": "#dcdee0"
  }, {
    "zoom": 12,
    "color": "#dcdee0"
  }, {
    "zoom": 13,
    "color": "#dcdee0"
  }, {
    "zoom": 14,
    "color": "#e1e3e5"
  }, {
    "zoom": 15,
    "color": "#e7e8ea"
  }, {
    "zoom": 16,
    "color": "#e8e9eb"
  }, {
    "zoom": 17,
    "color": "#e9eaeb"
  }, {
    "zoom": 18,
    "color": "#e9eaec"
  }, {
    "zoom": 19,
    "color": "#eaebed"
  }, {
    "zoom": 20,
    "color": "#ebeced"
  }, {
    "zoom": 21,
    "color": "#ecedee"
  }]
}, {
  "tags": "beach",
  "elements": "geometry",
  "stylers": [{
    "zoom": 0,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 1,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 2,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 3,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 4,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 5,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 6,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 7,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 8,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 9,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 10,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 11,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 12,
    "color": "#dcdee0",
    "opacity": 0.3
  }, {
    "zoom": 13,
    "color": "#dcdee0",
    "opacity": 0.65
  }, {
    "zoom": 14,
    "color": "#e1e3e5",
    "opacity": 1
  }, {
    "zoom": 15,
    "color": "#e7e8ea",
    "opacity": 1
  }, {
    "zoom": 16,
    "color": "#e8e9eb",
    "opacity": 1
  }, {
    "zoom": 17,
    "color": "#e9eaeb",
    "opacity": 1
  }, {
    "zoom": 18,
    "color": "#e9eaec",
    "opacity": 1
  }, {
    "zoom": 19,
    "color": "#eaebed",
    "opacity": 1
  }, {
    "zoom": 20,
    "color": "#ebeced",
    "opacity": 1
  }, {
    "zoom": 21,
    "color": "#ecedee",
    "opacity": 1
  }]
}, {
  "tags": {
    "all": ["is_tunnel", "path"]
  },
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#c3c7cb"
  }, {
    "opacity": 0.3
  }]
}, {
  "tags": {
    "all": ["is_tunnel", "path"]
  },
  "elements": "geometry.outline",
  "stylers": [{
    "opacity": 0
  }]
}, {
  "tags": "road_limited",
  "elements": "geometry.fill",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 0
  }, {
    "zoom": 1,
    "scale": 0
  }, {
    "zoom": 2,
    "scale": 0
  }, {
    "zoom": 3,
    "scale": 0
  }, {
    "zoom": 4,
    "scale": 0
  }, {
    "zoom": 5,
    "scale": 0
  }, {
    "zoom": 6,
    "scale": 0
  }, {
    "zoom": 7,
    "scale": 0
  }, {
    "zoom": 8,
    "scale": 0
  }, {
    "zoom": 9,
    "scale": 0
  }, {
    "zoom": 10,
    "scale": 0
  }, {
    "zoom": 11,
    "scale": 0
  }, {
    "zoom": 12,
    "scale": 0
  }, {
    "zoom": 13,
    "scale": 0.1
  }, {
    "zoom": 14,
    "scale": 0.2
  }, {
    "zoom": 15,
    "scale": 0.3
  }, {
    "zoom": 16,
    "scale": 0.5
  }, {
    "zoom": 17,
    "scale": 0.6
  }, {
    "zoom": 18,
    "scale": 0.7
  }, {
    "zoom": 19,
    "scale": 0.88
  }, {
    "zoom": 20,
    "scale": 0.92
  }, {
    "zoom": 21,
    "scale": 1
  }]
}, {
  "tags": "road_limited",
  "elements": "geometry.outline",
  "stylers": [{
    "color": "#c8ccd0"
  }, {
    "zoom": 0,
    "scale": 1
  }, {
    "zoom": 1,
    "scale": 1
  }, {
    "zoom": 2,
    "scale": 1
  }, {
    "zoom": 3,
    "scale": 1
  }, {
    "zoom": 4,
    "scale": 1
  }, {
    "zoom": 5,
    "scale": 1
  }, {
    "zoom": 6,
    "scale": 1
  }, {
    "zoom": 7,
    "scale": 1
  }, {
    "zoom": 8,
    "scale": 1
  }, {
    "zoom": 9,
    "scale": 1
  }, {
    "zoom": 10,
    "scale": 1
  }, {
    "zoom": 11,
    "scale": 1
  }, {
    "zoom": 12,
    "scale": 1
  }, {
    "zoom": 13,
    "scale": 0.1
  }, {
    "zoom": 14,
    "scale": 0.2
  }, {
    "zoom": 15,
    "scale": 0.3
  }, {
    "zoom": 16,
    "scale": 0.5
  }, {
    "zoom": 17,
    "scale": 0.6
  }, {
    "zoom": 18,
    "scale": 0.7
  }, {
    "zoom": 19,
    "scale": 0.84
  }, {
    "zoom": 20,
    "scale": 0.88
  }, {
    "zoom": 21,
    "scale": 0.95
  }]
}, {
  "tags": {
    "any": "landcover",
    "none": "vegetation"
  },
  "stylers": {
    "visibility": "off"
  }
}];

/***/ }),

/***/ "./js/modules/form-validate/callback.js":
/*!**********************************************!*\
  !*** ./js/modules/form-validate/callback.js ***!
  \**********************************************/
/*! exports provided: callbacks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "callbacks", function() { return callbacks; });
var baseSuccessCallback = function baseSuccessCallback(event) {
  event.preventDefault();
  // В данном колбеке бэкендер, либо разработчик при необходимости будет писать запрос на отправку формы на сервер и обрабатывать возможные ошибки или успешную отправку формы на сервер
};

var baseErrorCallback = function baseErrorCallback(event) {
  event.preventDefault();
  // Данный коллбек используется при необходимости выполнить какое-либо действие помимо показа ошибок при попытке отправить неккорректные данные, он не связан с запросами на сервер
};

var callbacks = {
  base: {
    // Сбросс формы
    reset: true,
    // Таймаут сброса формы
    resetTimeout: 500,
    successCallback: baseSuccessCallback,
    errorCallback: baseErrorCallback
  }
};

/***/ }),

/***/ "./js/modules/form-validate/form.js":
/*!******************************************!*\
  !*** ./js/modules/form-validate/form.js ***!
  \******************************************/
/*! exports provided: Form */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Form", function() { return Form; });
/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validator */ "./js/modules/form-validate/validator.js");
/* harmony import */ var _callback__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./callback */ "./js/modules/form-validate/callback.js");
/* harmony import */ var _init_phone_input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init-phone-input */ "./js/modules/form-validate/init-phone-input.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



var Form = /*#__PURE__*/function () {
  function Form() {
    _classCallCheck(this, Form);
    this._validator = new _validator__WEBPACK_IMPORTED_MODULE_0__["Validator"]();
    this._initPhoneInput = _init_phone_input__WEBPACK_IMPORTED_MODULE_2__["initPhoneInput"];
    this._callbacks = _callback__WEBPACK_IMPORTED_MODULE_1__["callbacks"];
    this._validState = false;
  }
  _createClass(Form, [{
    key: "_resetSelect",
    value: function _resetSelect(select) {
      var nativeSelect = select.querySelector('select');
      var activeIndex = nativeSelect.options.selectedIndex;
      var selectedOption = nativeSelect.options[activeIndex];
      var buttonText = select.querySelector('.custom-select__text');
      var selectItems = select.querySelectorAll('.custom-select__item');
      buttonText.textContent = selectedOption.textContent;
      selectItems.forEach(function (item, index) {
        if (index === activeIndex - 1) {
          item.setAttribute('aria-selected', 'true');
          return;
        }
        item.setAttribute('aria-selected', 'false');
      });
      if (!nativeSelect.value) {
        select.classList.remove('not-empty');
        select.classList.remove('is-valid');
      }
    }
  }, {
    key: "_resetSelects",
    value: function _resetSelects(form) {
      var _this = this;
      var selects = form.querySelectorAll('[data-select]');
      selects.forEach(function (select) {
        _this._resetSelect(select);
      });
    }
  }, {
    key: "reset",
    value: function reset(form) {
      var _this2 = this;
      this._validator._reset();
      var parent = form.closest('[data-form-validate]');
      form.reset();
      form.querySelectorAll('.is-invalid').forEach(function (item) {
        return item.classList.remove('is-invalid');
      });
      form.querySelectorAll('.is-valid').forEach(function (item) {
        return item.classList.remove('is-valid');
      });
      form.querySelectorAll('.input-message').forEach(function (item) {
        return item.remove();
      });
      parent.querySelectorAll('.input-message').forEach(function (item) {
        return item.remove();
      });
      setTimeout(function () {
        _this2._resetSelects(form);
      });
    }
  }, {
    key: "initPhoneInput",
    value: function initPhoneInput(parent) {
      this._initPhoneInput(parent);
    }
  }, {
    key: "validateForm",
    value: function validateForm(event) {
      return this._validator.validateForm(event);
    }
  }, {
    key: "validateFormElement",
    value: function validateFormElement(item) {
      return this._validator.validateFormElement(item);
    }
  }, {
    key: "createStates",
    value: function createStates(item) {
      return this._validator._createStates(item);
    }
  }, {
    key: "_onFormSubmit",
    value: function _onFormSubmit(event) {
      var _this3 = this;
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      this._validState = this.validateForm(event);
      if (this._validState && callback) {
        this._callbacks[callback].successCallback(event);
        if (this._callbacks[callback].reset) {
          setTimeout(function () {
            _this3.reset(event.target);
          }, this._callbacks[callback].resetTimeout ? this._callbacks[callback].resetTimeout : 500);
        }
        return;
      }
      if (!this._validState && callback) {
        this._callbacks[callback].errorCallback(event);
        return;
      }
    }
  }, {
    key: "_onFormInput",
    value: function _onFormInput(item) {
      this.validateFormElement(item);
      this.createStates(item);
    }
  }, {
    key: "_initValidate",
    value: function _initValidate(parent) {
      var _this4 = this;
      var form = parent.querySelector('form');
      if (!form) {
        return;
      }
      var phoneParents = form.querySelectorAll('[data-validate-type="phone"]');
      phoneParents.forEach(function (item) {
        return _this4._initPhoneInput(item);
      });
      var callback = parent.dataset.callback;
      form.noValidate = true;
      form.addEventListener('submit', function (event) {
        _this4._onFormSubmit(event, callback);
      });
      form.addEventListener('input', function (event) {
        _this4._onFormInput(event.target);
      });
      form.addEventListener('reset', function (event) {
        _this4.reset(event.target);
      });
    }
  }, {
    key: "init",
    value: function init() {
      var _this5 = this;
      this._validateParent = document.querySelectorAll('[data-form-validate]');
      if (!this._validateParent.length) {
        return;
      }
      this._validateParent.forEach(function (parent) {
        return _this5._initValidate(parent);
      });
    }
  }]);
  return Form;
}();

/***/ }),

/***/ "./js/modules/form-validate/init-phone-input.js":
/*!******************************************************!*\
  !*** ./js/modules/form-validate/init-phone-input.js ***!
  \******************************************************/
/*! exports provided: initPhoneInput */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPhoneInput", function() { return initPhoneInput; });
var baseCountryCode = '+7';
var baseMatrix = ' (___) ___ __ __';
var phoneLength = baseCountryCode.length + baseMatrix.length;
var onPhoneInputInput = function onPhoneInputInput(e) {
  var matrix = "".concat(baseCountryCode).concat(baseMatrix);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = e.target.value.replace(/\D/g, '');
  if (def.length >= val.length) {
    val = def;
  }
  e.target.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};
var onPhoneInputFocus = function onPhoneInputFocus(_ref) {
  var target = _ref.target;
  if (!target.value) {
    target.value = baseCountryCode;
  }
  target.addEventListener('input', onPhoneInputInput);
  target.addEventListener('blur', onPhoneInputBlur);
  target.addEventListener('keydown', onPhoneInputKeydown);
  target.addEventListener('paste', onPhoneInputPaste);
  target.addEventListener('click', onPhoneInputClick);
};
var onPhoneInputClick = function onPhoneInputClick(e) {
  if (e.target.selectionStart < 4) {
    e.preventDefault();
    e.target.setSelectionRange(3, 3);
  }
};
var onPhoneInputPaste = function onPhoneInputPaste(e) {
  e.target.setSelectionRange(0, 0);
  if (!e.target.selectionStart) {
    setTimeout(function () {
      if (e.target.value.startsWith('+7')) {
        return;
      }
      if (e.target.value.startsWith('+8')) {
        e.target.value = "+7 ".concat(e.target.value.slice(3));
        return;
      }
      e.target.value = '';
    });
  }
};
var onPhoneInputKeydown = function onPhoneInputKeydown(e) {
  if (e.target.selectionStart < 4 && (e.keyCode === 37 || e.keyCode === 13)) {
    e.preventDefault();
    e.target.setSelectionRange(3, 3);
  }
};
var onPhoneInputBlur = function onPhoneInputBlur(_ref2) {
  var target = _ref2.target;
  if (target.value === baseCountryCode) {
    var parent = target.closest('[data-validate-type="phone"]');
    target.value = '';
    if (!parent.hasAttribute('data-required')) {
      parent.classList.remove('is-valid');
      parent.classList.remove('is-invalid');
      var parentMessage = parent.querySelector('.input-message');
      if (parentMessage) {
        parentMessage.remove();
      }
    }
    parent.classList.remove('not-empty');
    target.removeEventListener('input', onPhoneInputInput);
    target.removeEventListener('blur', onPhoneInputBlur);
    target.removeEventListener('keydown', onPhoneInputKeydown);
    target.removeEventListener('paste', onPhoneInputPaste);
    target.removeEventListener('click', onPhoneInputClick);
  }
};
var initPhoneInput = function initPhoneInput(parent) {
  var input = parent.querySelector('input');
  parent.dataset.phoneLength = phoneLength;
  input.addEventListener('focus', onPhoneInputFocus);
};

/***/ }),

/***/ "./js/modules/form-validate/matrix.js":
/*!********************************************!*\
  !*** ./js/modules/form-validate/matrix.js ***!
  \********************************************/
/*! exports provided: matrixReplace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrixReplace", function() { return matrixReplace; });
var matrixReplace = function matrixReplace(item, matrix, RegEx) {
  if (!matrix) {
    // eslint-disable-next-line no-console
    console.error('При валидации по матрице обязательно указывать формат матрицы: data-matrix=""');
    item.value = '';
    return;
  }
  if (!RegEx) {
    // eslint-disable-next-line no-console
    console.error('При валидации по матрице обязательно указывать формат ограничений: data-matrix-limitations=""');
    item.value = '';
    return;
  }
  var def = matrix.replace(RegEx, '');
  var val = item.value.replace(RegEx, '');
  var i = 0;
  if (def.length >= val.length) {
    val = def;
  }
  item.value = matrix.replace(/./g, function (a) {
    if (/[_\^]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};

/***/ }),

/***/ "./js/modules/form-validate/regular-expression.js":
/*!********************************************************!*\
  !*** ./js/modules/form-validate/regular-expression.js ***!
  \********************************************************/
/*! exports provided: getLimitationsRegEx, getMatrixLimitationsRegEx, getMailRegEx */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLimitationsRegEx", function() { return getLimitationsRegEx; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatrixLimitationsRegEx", function() { return getMatrixLimitationsRegEx; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMailRegEx", function() { return getMailRegEx; });
var setLimitationError = function setLimitationError(limitation) {
  // eslint-disable-next-line no-console
  console.error("\u041F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F(data-limitation=\"".concat(limitation, "\") - \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439."));
};
var getLimitationsRegEx = function getLimitationsRegEx(limitation) {
  switch (limitation) {
    case 'digit':
      return /[^\d]/g;
    case 'name':
      return /[^a-zA-Zа-яёА-ЯЁ\-\s]/g;
    case 'letters':
      return /[^a-zA-Zа-яёА-ЯЁ\s]/g;
    case 'letters-and-digit':
      return /[^a-zA-Zа-яёА-ЯЁ\s\d]/g;
    case 'cyrillic':
      return /[^а-яёА-ЯЁ\s]/g;
    case 'latin':
      return /[^a-zA-Z\s]/g;
    default:
      return setLimitationError(limitation);
  }
};
var getMatrixLimitationsRegEx = function getMatrixLimitationsRegEx(matrix) {
  switch (matrix) {
    case 'digit':
      return /[^\d]/g;
    case 'name':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\-]]/g;
    case 'letters':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z]/g;
    case 'letters-and-digit':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\d]/g;
    case 'cyrillic':
      return /[^\а-яё\А-ЯЁ]/g;
    case 'latin':
      return /[^\a-z\A-Z]/g;
    default:
      return false;
  }
};
var getMailRegEx = function getMailRegEx() {
  return /[a-zA-Zа-яёА-ЯЁ0-9]{1}([a-zA-Zа-яёА-ЯЁ0-9\-_\.]{1,})?@[a-zA-Zа-яёА-ЯЁ0-9\-]{1}([a-zA-Zа-яёА-ЯЁ0-9.\-]{1,})?[a-zA-Zа-яёА-ЯЁ0-9\-]{1}\.[a-zA-Zа-яёА-ЯЁ]{2,6}/;
};

/***/ }),

/***/ "./js/modules/form-validate/render-message.js":
/*!****************************************************!*\
  !*** ./js/modules/form-validate/render-message.js ***!
  \****************************************************/
/*! exports provided: Message */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Message", function() { return Message; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Message = /*#__PURE__*/function () {
  function Message() {
    _classCallCheck(this, Message);
    this._baseErrorText = 'Это поле является обязательным';
  }
  _createClass(Message, [{
    key: "_messageTemplate",
    value: function _messageTemplate(message, state) {
      var cssClass = state === 'valid' ? 'is-valid' : 'is-invalid';
      return "<span class=\"input-message ".concat(cssClass, "\">").concat(message, "</span>");
    }
  }, {
    key: "removeMessage",
    value: function removeMessage(parent) {
      var parentMessage = parent.querySelector('.input-message');
      if (parentMessage) {
        parentMessage.remove();
      }
    }
  }, {
    key: "renderMessage",
    value: function renderMessage(parent, message, state) {
      this.removeMessage(parent);
      parent.insertAdjacentHTML('beforeend', this._messageTemplate(message, state));
    }
  }]);
  return Message;
}();

/***/ }),

/***/ "./js/modules/form-validate/validator.js":
/*!***********************************************!*\
  !*** ./js/modules/form-validate/validator.js ***!
  \***********************************************/
/*! exports provided: Validator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Validator", function() { return Validator; });
/* harmony import */ var _regular_expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regular-expression */ "./js/modules/form-validate/regular-expression.js");
/* harmony import */ var _matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matrix */ "./js/modules/form-validate/matrix.js");
/* harmony import */ var _render_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render-message */ "./js/modules/form-validate/render-message.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



var Validator = /*#__PURE__*/function () {
  function Validator() {
    _classCallCheck(this, Validator);
    this._getLimitationsRegEx = _regular_expression__WEBPACK_IMPORTED_MODULE_0__["getLimitationsRegEx"];
    this._getMatrixLimitationsRegEx = _regular_expression__WEBPACK_IMPORTED_MODULE_0__["getMatrixLimitationsRegEx"];
    this._getMailRegEx = _regular_expression__WEBPACK_IMPORTED_MODULE_0__["getMailRegEx"];
    this._matrixReplace = _matrix__WEBPACK_IMPORTED_MODULE_1__["matrixReplace"];
    this._message = new _render_message__WEBPACK_IMPORTED_MODULE_2__["Message"]();
    this._invalidNotEmpty = false;
    this._validState = true;
    this._submitEvent = false;
  }
  _createClass(Validator, [{
    key: "_createStates",
    value: function _createStates(item) {
      var _this = this;
      this._validState = true;
      this._invalidNotEmpty = false;
      var parent = item.closest('[data-form-validate]');
      var formElements = parent.querySelectorAll('input', 'select', 'textarea');
      formElements.forEach(function (element) {
        if (element.getAttribute('aria-invalid') === 'true') {
          _this._validState = false;
          if (element.value) {
            _this._invalidNotEmpty = true;
          }
        }
      });
      this._validateFormParent(parent);
    }
  }, {
    key: "_renderMessage",
    value: function _renderMessage(trigger, parent, input) {
      if (!parent.hasAttribute('data-required') && !input.value) {
        return;
      }
      if (!trigger) {
        parent.classList.add('is-invalid');
        if (parent.hasAttribute('data-message-base') && !input.value) {
          this._message.renderMessage(parent, parent.dataset.messageBase, 'invalid');
        } else if (parent.hasAttribute('data-message-extra') && input.value) {
          this._message.renderMessage(parent, parent.dataset.messageExtra, 'invalid');
        } else if (!parent.hasAttribute('data-message-extra') && parent.hasAttribute('data-message-base') && input.value) {
          this._message.renderMessage(parent, parent.dataset.messageBase, 'invalid');
        } else {
          this._message.removeMessage(parent);
        }
      } else {
        if (parent.hasAttribute('data-message-success')) {
          this._message.renderMessage(parent, parent.dataset.messageSuccess, 'valid');
        } else {
          this._message.removeMessage(parent);
        }
      }
    }
  }, {
    key: "_setItemValidState",
    value: function _setItemValidState(parent, input) {
      if (!parent.hasAttribute('data-required') && !input.value) {
        return;
      }
      parent.classList.add('is-valid');
      parent.classList.remove('is-invalid');
      input.setAttribute('aria-invalid', 'false');
      this._message.removeMessage(parent);
    }
  }, {
    key: "_setItemInvalidState",
    value: function _setItemInvalidState(parent, input) {
      if (!parent.hasAttribute('data-required') && !input.value) {
        return;
      }
      parent.classList.remove('is-valid');
      input.setAttribute('aria-invalid', 'true');
    }
  }, {
    key: "_simpleLimitation",
    value: function _simpleLimitation(item, limitation) {
      item.value = item.value.replace(this._getLimitationsRegEx(limitation), '');
    }
  }, {
    key: "_matrixLimitation",
    value: function _matrixLimitation(item, matrix, limitation) {
      this._matrixReplace(item, matrix, limitation);
    }
  }, {
    key: "_validateTextInput",
    value: function _validateTextInput(parent, input) {
      var flag = true;
      if (input.value.length >= (+input.getAttribute('minlength') || 1)) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateMatrixInput",
    value: function _validateMatrixInput(parent, input) {
      var flag = true;
      if (input.value.length === input.closest('[data-matrix]').dataset.matrix.length) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateEmailInput",
    value: function _validateEmailInput(parent, input) {
      var flag = true;
      if (new RegExp(this._getMailRegEx(), '').test(input.value)) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validatePhoneInput",
    value: function _validatePhoneInput(parent, input) {
      var flag = true;
      if (input.value.length >= +parent.dataset.phoneLength) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateCheckbox",
    value: function _validateCheckbox(parent, input) {
      var flag = true;
      if (input.checked) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_findSelectedOption",
    value: function _findSelectedOption(options) {
      var flag = false;
      options.forEach(function (option) {
        if (option.value && option.selected) {
          flag = true;
        }
      });
      return flag;
    }
  }, {
    key: "_validateSelect",
    value: function _validateSelect(parent, input) {
      var options = input.querySelectorAll('option');
      var customSelectText = parent.querySelector('.custom-select__text');
      input.setAttribute('aria-invalid', 'false');
      var flag = true;
      if (this._findSelectedOption(options)) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        parent.classList.remove('not-empty');
        customSelectText.innerHTML = '';
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_returnCheckedElements",
    value: function _returnCheckedElements(inputs) {
      var flag = false;
      inputs.forEach(function (input) {
        if (input.checked) {
          flag = true;
        }
      });
      return flag;
    }
  }, {
    key: "_removeGroupAria",
    value: function _removeGroupAria(inputs) {
      inputs.forEach(function (input) {
        if (!input.checked) {
          input.removeAttribute('aria-required');
          input.removeAttribute('aria-invalid');
        } else {
          input.setAttribute('aria-required', true);
          input.setAttribute('aria-invalid', false);
        }
      });
    }
  }, {
    key: "_setGroupAria",
    value: function _setGroupAria(inputs) {
      inputs.forEach(function (input) {
        input.setAttribute('aria-required', true);
        input.setAttribute('aria-invalid', true);
      });
    }
  }, {
    key: "_validateToggleGroup",
    value: function _validateToggleGroup(parent) {
      var formElements = parent.querySelectorAll('input');
      var flag = true;
      if (this._returnCheckedElements(formElements)) {
        this._removeGroupAria(formElements);
        parent.classList.remove('is-invalid');
        parent.classList.add('is-valid');
        this._message.removeMessage(parent);
      } else {
        this._setGroupAria(formElements);
        parent.classList.remove('is-valid');
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_customExample",
    value: function _customExample(parent, input) {
      var flag = true;
      if (!input.value.length) {
        parent.dataset.messageBase = 'Поле обязательно к заполнению';
        this._setItemInvalidState(parent, input);
        flag = false;
      } else if (input.value.length < input.minLength) {
        parent.dataset.messageBase = "\u041E\u0441\u0442\u0430\u043B\u043E\u0441\u044C \u0432\u0432\u0435\u0441\u0442\u0438 \u0435\u0449\u0451 ".concat(input.minLength - input.value.length, " \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432");
        this._setItemInvalidState(parent, input);
        flag = false;
      } else if (input.value.length > input.minLength) {
        parent.dataset.messageBase = "\u0412\u044B \u0432\u0432\u0435\u043B\u0438 ".concat(input.value.length - input.minLength, " \u043B\u0438\u0448\u043D\u0438\u0445 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432");
        this._setItemInvalidState(parent, input);
        flag = false;
      } else {
        parent.dataset.messageSuccess = 'Поле заполнено корректно';
        this._setItemValidState(parent, input);
        flag = true;
      }
      return flag;
    }
  }, {
    key: "_validateFile",
    value: function _validateFile(parent, input) {
      var flag = true;
      var sizeTest = parent.dataset.maxSize && input.files[0] ? input.files[0].size < +parent.dataset.maxSize : true;
      if (input.value && sizeTest) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_customUpload",
    value: function _customUpload(parent, input) {
      var flag = true;
      if (parent.classList.contains('is-invalid') || !input.files[0]) {
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateInput",
    value: function _validateInput(type, parent, input) {
      switch (type) {
        case 'text':
          return this._validateTextInput(parent, input);
        case 'matrix':
          return this._validateMatrixInput(parent, input);
        case 'email':
          return this._validateEmailInput(parent, input);
        case 'phone':
          return this._validatePhoneInput(parent, input);
        case 'checkbox':
          return this._validateCheckbox(parent, input);
        case 'select':
          return this._validateSelect(parent, input);
        case 'toggle-group':
          return this._validateToggleGroup(parent, input);
        case 'file':
          return this._validateFile(parent, input);
        case 'custom-upload':
          return this._customUpload(parent, input);
        case 'custom-example':
          return this._customExample(parent, input);
        default:
          return false;
      }
    }
  }, {
    key: "_baseParentValidate",
    value: function _baseParentValidate(formParent) {
      if (!this._submitEvent) {
        return;
      }
      if (!this._invalidNotEmpty && !this._validState) {
        this._message.renderMessage(formParent, formParent.dataset.messageBase, 'invalid');
        return;
      }
      if (this._invalidNotEmpty && !this._validState) {
        this._message.renderMessage(formParent, formParent.dataset.messageExtra || formParent.dataset.messageBase, 'invalid');
        return;
      }
      if (this._validState) {
        this._message.removeMessage(formParent);
        return;
      }
    }
  }, {
    key: "_validateParent",
    value: function _validateParent(formParent, type) {
      switch (type) {
        case 'base':
          return this._baseParentValidate(formParent);
        default:
          return false;
      }
    }
  }, {
    key: "validateFormElement",
    value: function validateFormElement(formElement) {
      var fullValidate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var parent = formElement.closest('[data-validate-type]');
      if (!parent) {
        return;
      }
      if (!parent.hasAttribute('data-required')) {
        var removeElement = parent.querySelector('input') || parent.querySelector('select') || parent.querySelector('textarea');
        if (!removeElement.value) {
          parent.classList.remove('is-valid');
          parent.classList.remove('is-invalid');
        }
      }
      var onInputValidate = parent.hasAttribute('data-on-input-validate');
      if (parent.hasAttribute('data-limitation')) {
        this._simpleLimitation(formElement, parent.dataset.limitation);
      }
      if (parent.dataset.validateType === 'matrix') {
        this._matrixLimitation(formElement, parent.dataset.matrix, this._getMatrixLimitationsRegEx(parent.dataset.matrixLimitation));
      }
      var isValid = this._validateInput(parent.dataset.validateType, parent, formElement);
      if (onInputValidate || fullValidate) {
        this._renderMessage(isValid, parent, formElement);
      }
    }
  }, {
    key: "_fullValidate",
    value: function _fullValidate(items) {
      var _this2 = this;
      var isValid = true;
      items.forEach(function (item) {
        var formElement = item.querySelector('input') || item.querySelector('select') || item.querySelector('textarea');
        _this2.validateFormElement(formElement, true);
        if (item.classList.contains('is-invalid')) {
          isValid = false;
        }
      });
      return isValid;
    }
  }, {
    key: "validateForm",
    value: function validateForm(event) {
      if (event.type === 'submit') {
        this._submitEvent = true;
      }
      var validateItems = event.target.querySelectorAll('[data-validate-type]');
      var result = this._fullValidate(validateItems);
      this._createStates(event.target);
      return result;
    }
  }, {
    key: "_reset",
    value: function _reset() {
      this._submitEvent = false;
    }
  }, {
    key: "_validateFormParent",
    value: function _validateFormParent(element) {
      var formParent = element.closest('[data-form-validate]');
      if (formParent.dataset.parentValidate) {
        this._validateParent(formParent, formParent.dataset.parentValidate);
      }
    }
  }]);
  return Validator;
}();

/***/ }),

/***/ "./js/modules/init-map.js":
/*!********************************!*\
  !*** ./js/modules/init-map.js ***!
  \********************************/
/*! exports provided: initYM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initYM", function() { return initYM; });
/* harmony import */ var _map_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map-data */ "./js/modules/map-data.js");
/* harmony import */ var _customization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./customization */ "./js/modules/customization.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


function initYM() {
  return _initYM.apply(this, arguments);
}
function _initYM() {
  _initYM = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var mapContainer, _ymaps, YMap, YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer, YMapMarker, map, markerElement, marker;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          mapContainer = document.querySelector('#map');
          if (mapContainer) {
            _context.next = 3;
            break;
          }
          return _context.abrupt("return");
        case 3:
          _context.next = 5;
          return ymaps3.ready;
        case 5:
          _ymaps = ymaps3, YMap = _ymaps.YMap, YMapDefaultSchemeLayer = _ymaps.YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer = _ymaps.YMapDefaultFeaturesLayer, YMapMarker = _ymaps.YMapMarker;
          map = new YMap(mapContainer, {
            location: _map_data__WEBPACK_IMPORTED_MODULE_0__["LOCATION"],
            showScaleInCopyrights: true
          });
          map.addChild(new YMapDefaultSchemeLayer({
            customization: _customization__WEBPACK_IMPORTED_MODULE_1__["schemeLayer"]
          }));
          map.addChild(new YMapDefaultFeaturesLayer());
          markerElement = document.createElement('img');
          markerElement.className = _map_data__WEBPACK_IMPORTED_MODULE_0__["markerProps"].className;
          markerElement.src = _map_data__WEBPACK_IMPORTED_MODULE_0__["markerProps"].iconSrc;
          marker = new YMapMarker({
            coordinates: _map_data__WEBPACK_IMPORTED_MODULE_0__["markerProps"].coordinates
          }, markerElement);
          map.addChild(marker);
        case 14:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _initYM.apply(this, arguments);
}


/***/ }),

/***/ "./js/modules/init-news-slider.js":
/*!****************************************!*\
  !*** ./js/modules/init-news-slider.js ***!
  \****************************************/
/*! exports provided: initNewsSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initNewsSlider", function() { return initNewsSlider; });
var newsSlider = document.querySelector('.slider-news');
var swiper;
var initSwiper = function initSwiper(slider) {
  // eslint-disable-next-line no-undef

  swiper = new Swiper(slider, {
    slidesPerView: 1,
    spaceBetween: 16,
    breakpoints: {
      480: {
        spaceBetween: 24,
        slidesPerView: 2
      },
      1024: {
        slidesPerView: 3,
        spaceBetween: 32
      },
      1280: {
        slidesPerView: 4,
        spaceBetween: 64
      }
    },
    navigation: {
      nextEl: slider.closest('section').querySelector('.swiper-button-next'),
      prevEl: slider.closest('section').querySelector('.swiper-button-prev')
    }
  });
};
var initNewsSlider = function initNewsSlider() {
  if (!newsSlider) {
    return;
  }
  initSwiper(newsSlider);
};


/***/ }),

/***/ "./js/modules/init-partners-slider.js":
/*!********************************************!*\
  !*** ./js/modules/init-partners-slider.js ***!
  \********************************************/
/*! exports provided: initPartnersSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPartnersSlider", function() { return initPartnersSlider; });
var partnersSlider = document.querySelector('.slider-partners');
var swiper;
var initSwiper = function initSwiper(slider) {
  // eslint-disable-next-line no-undef

  swiper = new Swiper(slider, {
    slidesPerView: 1,
    spaceBetween: 16,
    breakpoints: {
      480: {
        spaceBetween: 24,
        slidesPerView: 2
      },
      1024: {
        slidesPerView: 3,
        spaceBetween: 64
      }
    },
    navigation: {
      nextEl: slider.closest('section').querySelector('.swiper-button-next'),
      prevEl: slider.closest('section').querySelector('.swiper-button-prev')
    }
  });
};
var initPartnersSlider = function initPartnersSlider() {
  if (!partnersSlider) {
    return;
  }
  initSwiper(partnersSlider);
};


/***/ }),

/***/ "./js/modules/init-scroll-blink.js":
/*!*****************************************!*\
  !*** ./js/modules/init-scroll-blink.js ***!
  \*****************************************/
/*! exports provided: initScrollBlink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initScrollBlink", function() { return initScrollBlink; });
var initScrollBlink = function initScrollBlink() {
  var intro = document.querySelector('.intro');
  if (!intro) {
    return;
  }
  var blinkElement = intro.querySelector('.blink ellipse');
  var getBlink = function getBlink() {
    if (document.documentElement.scrollTop > intro.offsetHeight) {
      return;
    }
    blinkElement.setAttribute('rx', document.documentElement.scrollTop / 1);
    blinkElement.setAttribute('ry', document.documentElement.scrollTop / 1.6);
  };
  window.addEventListener('scroll', getBlink);
};


/***/ }),

/***/ "./js/modules/init-scroll-separator.js":
/*!*********************************************!*\
  !*** ./js/modules/init-scroll-separator.js ***!
  \*********************************************/
/*! exports provided: initScrollSeparator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initScrollSeparator", function() { return initScrollSeparator; });
var initScrollSeparator = function initScrollSeparator() {
  var header = document.querySelector('[data-header]');
  if (!header) {
    return;
  }
  var getSeparator = function getSeparator() {
    if (document.documentElement.scrollTop > 10) {
      header.classList.add('header--shadow');
    } else {
      header.classList.remove('header--shadow');
    }
  };
  window.addEventListener('scroll', getSeparator);
};


/***/ }),

/***/ "./js/modules/init-tabs-slider.js":
/*!****************************************!*\
  !*** ./js/modules/init-tabs-slider.js ***!
  \****************************************/
/*! exports provided: initTabsSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTabsSlider", function() { return initTabsSlider; });
var tabsSlider = document.querySelector('.about-specialist__info');
var swiper;
var initSwiper = function initSwiper(slider) {
  // eslint-disable-next-line no-undef

  swiper = new Swiper(slider, {
    slidesPerView: 'auto',
    freeMode: true
  });
};
var initTabsSlider = function initTabsSlider() {
  if (!tabsSlider) {
    return;
  }
  initSwiper(tabsSlider);
};


/***/ }),

/***/ "./js/modules/init-tabs.js":
/*!*********************************!*\
  !*** ./js/modules/init-tabs.js ***!
  \*********************************/
/*! exports provided: initTabs, tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTabs", function() { return initTabs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tabs", function() { return tabs; });
/* harmony import */ var _tabs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs */ "./js/modules/tabs.js");

var tabs;
var initTabs = function initTabs() {
  tabs = new _tabs__WEBPACK_IMPORTED_MODULE_0__["Tabs"]();
  // Используйте в разработке экспортируемую переменную tabs, window сделан для бэкэнда
  window.tabs = tabs;
};


/***/ }),

/***/ "./js/modules/map-data.js":
/*!********************************!*\
  !*** ./js/modules/map-data.js ***!
  \********************************/
/*! exports provided: LOCATION, markerProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCATION", function() { return LOCATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "markerProps", function() { return markerProps; });
var LOCATION = {
  center: [37.677724, 55.762135],
  // starting position [lng, lat]
  zoom: 14 // starting zoom
};

// Array containing data for markers
var markerProps = {
  coordinates: [37.677724, 55.762135],
  iconSrc: './img/svg/marker.svg',
  className: 'icon-marker'
};

/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals;

// Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };

// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};
var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);
    });
  }
  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings);
  // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда
  window.modals = modals;
};


/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vendor/scroll-lock.min */ "./js/vendor/scroll-lock.min.js");
/* harmony import */ var _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, Modals);
    this._scrollLock = _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0___default.a;
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._stackModalElements = [];
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._resetScrollPos = this._settings[this._settingKey].resetScrollPos;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);
    this._init();
  }
  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;
      if (!this._settings[settingKey]) {
        return;
      }
      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._resetScrollPos = typeof this._settings[settingKey].resetScrollPos === 'boolean' ? this._settings[settingKey].resetScrollPos : this._settings[this._settingKey].resetScrollPos;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-open-modal]')) {
        return;
      }
      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;
      if (!this._modalName) {
        return;
      }
      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';
      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-close-modal]')) {
        return;
      }
      if (target.closest('[data-close-modal="back"]')) {
        this.back();
      } else {
        this.close(target.closest('[data-modal]').dataset.modal);
        this._stackModalElements = [];
      }
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');
        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      if (!modal || modal.classList.contains('is-active')) {
        return;
      }
      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');
      if (this._openedModalElement) {
        this._scrollLock.enablePageScroll(this._openedModalElement);
        this._scrollLock.disablePageScroll(modal);
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }
      this._setSettings(modalName);
      modal.classList.add('is-active');
      if (modalName !== this._stackModalElements[this._stackModalElements.length - 1]) {
        this._stackModalElements.push(modalName);
      }
      if (!this._openedModalElement) {
        this._scrollLock.disablePageScroll(modal);
      }
      if (this._openCallback) {
        this._openCallback();
      }
      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }
      if (this._resetScrollPos) {
        modal.scrollTo(0, 0);
      }
      setTimeout(function () {
        _this._addListeners(modal);
        _this._autoPlay(modal);
        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "back",
    value: function back() {
      if (!this._stackModalElements.length) {
        return;
      }
      var activeModal = this._stackModalElements[this._stackModalElements.length - 1];
      var prevModal = this._stackModalElements[this._stackModalElements.length - 2];
      if (this._stackModalElements.length === 1) {
        this._stackModalElements = [];
      }
      if (prevModal) {
        this._stackModalElements.pop();
        this.open(prevModal);
      }
      this.close(activeModal);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);
      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }
      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }
      modal.classList.remove('is-active');
      this._removeListeners(modal);
      this._stopInteractive(modal);
      if (this._closeCallback) {
        this._closeCallback();
      }
      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enablePageScroll(modal);
        }, this._eventTimeout);
      }
      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);
      this._setSettings('default');
      this._enableScrolling = true;
    }
  }]);
  return Modals;
}();

/***/ }),

/***/ "./js/modules/select/create-select-markup.js":
/*!***************************************************!*\
  !*** ./js/modules/select/create-select-markup.js ***!
  \***************************************************/
/*! exports provided: createNativeSelectMarkup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeSelectMarkup", function() { return createNativeSelectMarkup; });
var createNativeOptionsMarkup = function createNativeOptionsMarkup(items, activeIndex) {
  return items.map(function (el, index) {
    if (activeIndex.length) {
      var currentIndex = activeIndex.find(function (item) {
        return item === index;
      });
      if (currentIndex === index) {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', " selected>").concat(el.text ? "".concat(el.text) : '', "</option>");
      } else {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
      }
    } else {
      return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
    }
  }).join('\n');
};
var createNativeSelectMarkup = function createNativeSelectMarkup(_ref) {
  var id = _ref.id,
    items = _ref.items,
    multiple = _ref.multiple,
    name = _ref.name,
    required = _ref.required,
    _ref$activeIndex = _ref.activeIndex,
    activeIndex = _ref$activeIndex === void 0 ? [] : _ref$activeIndex;
  return "<select ".concat(id ? "id='".concat(id, "'") : '', " ").concat(name ? "name='".concat(name, "'") : '', " ").concat(multiple ? 'multiple' : '', " ").concat(required ? 'required' : '', " tabindex=\"-1\" aria-hidden=\"true\">\n            <option value=\"\"></option>\n            ").concat(createNativeOptionsMarkup(items, activeIndex), "\n          </select>");
};

/***/ }),

/***/ "./js/modules/select/custom-select.js":
/*!********************************************!*\
  !*** ./js/modules/select/custom-select.js ***!
  \********************************************/
/*! exports provided: CustomSelect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomSelect", function() { return CustomSelect; });
/* harmony import */ var _utils_render__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/render */ "./js/utils/render.js");
/* harmony import */ var _create_select_markup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-select-markup */ "./js/modules/select/create-select-markup.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var CustomSelect = /*#__PURE__*/function () {
  function CustomSelect() {
    _classCallCheck(this, CustomSelect);
    this._selects = null;
    this._selectElement = null;
    this._activeIndex = null;
    this._onDocumentClick = this._onDocumentClick.bind(this);
    this._onEscapePress = this._onEscapePress.bind(this);
    this._onSelectItemClick = this._onSelectItemClick.bind(this);
    this._onSelectItemKeydown = this._onSelectItemKeydown.bind(this);
    this._onLastItemKeydown = this._onLastItemKeydown.bind(this);
    this._onSelectClick = this._onSelectClick.bind(this);
    this._onSelectKeydown = this._onSelectKeydown.bind(this);
    window.selectInit = this.init.bind(this);
  }
  _createClass(CustomSelect, [{
    key: "_createMultiString",
    value: function _createMultiString(arr) {
      var str = '';
      if (arr.length) {
        if (arr.length === 1) {
          str = arr[0].innerHTML;
        } else {
          arr.forEach(function (element, index) {
            if (index === arr.length - 1) {
              str += element.innerHTML;
            } else {
              str += "".concat(element.innerHTML, ", ");
            }
          });
        }
      }
      return str;
    }
  }, {
    key: "_setSelectActiveState",
    value: function _setSelectActiveState(multiple, insert, item) {
      var buttonTextBlock = item.querySelector('.custom-select__text');
      var activeItems = item.querySelectorAll('.custom-select__item[aria-selected="true"]');
      var label = item.querySelector('.custom-select__label');
      var str = this._createMultiString(activeItems);
      buttonTextBlock.style.transition = '0s';
      if (label) {
        label.style.transition = '0s';
      }
      setTimeout(function () {
        if (label) {
          label.style.transition = null;
        }
        buttonTextBlock.style.transition = null;
      }, 300);
      if (multiple && insert) {
        item.classList.add('not-empty');
        buttonTextBlock.innerHTML = str;
      } else if (multiple) {
        return;
      } else {
        item.classList.add('not-empty');
        buttonTextBlock.innerHTML = activeItems[0].innerHTML;
      }
    }
  }, {
    key: "_closeSelect",
    value: function _closeSelect() {
      var activeSelect = document.querySelector('[data-select].is-open');
      document.removeEventListener('click', this._onDocumentClick);
      document.removeEventListener('keydown', this._onEscapePress);
      if (activeSelect) {
        activeSelect.classList.remove('is-open');
      }
    }
  }, {
    key: "_onSelectElementClickAction",
    value: function _onSelectElementClickAction(element, index) {
      var parent = element.closest('.custom-select');
      var multiple = parent.dataset.multiple;
      var insert = parent.dataset.insert;
      var buttonTextBlock = parent.querySelector('.custom-select__text');
      var itemText = element.textContent;
      var options = parent.querySelectorAll('option');
      var select = parent.querySelector('select');
      var changeEv = new CustomEvent('change');
      var inputEv = new CustomEvent('input');
      var form = select.closest('form');
      var parentMessage = parent.querySelector('.input-message');
      if (parentMessage) {
        parentMessage.remove();
      }
      if (form) {
        var formChangeEv = new CustomEvent('change');
        var formInputEv = new CustomEvent('input');
        form.dispatchEvent(formChangeEv);
        form.dispatchEvent(formInputEv);
      }
      if (multiple) {
        if (insert === 'true') {
          if (element.getAttribute('aria-selected') === 'true') {
            element.setAttribute('aria-selected', 'false');
            var activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');
            var str = this._createMultiString(activeItems);
            options[index + 1].selected = false;
            buttonTextBlock.innerText = str;
            if (!str) {
              parent.classList.remove('not-empty');
              parent.classList.remove('is-valid');
            }
          } else {
            element.setAttribute('aria-selected', 'true');
            var _activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');
            var _str = this._createMultiString(_activeItems);
            buttonTextBlock.innerText = _str;
            parent.classList.add('not-empty');
            parent.classList.add('is-valid');
            options[index + 1].selected = true;
          }
        } else {
          if (element.getAttribute('aria-selected') === 'true') {
            element.setAttribute('aria-selected', 'false');
            options[index + 1].selected = false;
          } else {
            element.setAttribute('aria-selected', 'true');
            options[index + 1].selected = true;
          }
        }
      } else {
        var activeItem = parent.querySelector('.custom-select__item[aria-selected="true"]');
        if (element.getAttribute('aria-selected') === 'true') {
          this._closeSelect();
        } else {
          if (activeItem) {
            activeItem.setAttribute('aria-selected', 'false');
            parent.classList.remove('not-empty');
            parent.classList.remove('is-valid');
          }
          buttonTextBlock.innerText = itemText;
          element.setAttribute('aria-selected', 'true');
          parent.classList.add('not-empty');
          parent.classList.add('is-valid');
          options[index + 1].selected = true;
          this._closeSelect();
        }
      }
      select.dispatchEvent(changeEv);
      select.dispatchEvent(inputEv);
    }
  }, {
    key: "_onDocumentClick",
    value: function _onDocumentClick(_ref) {
      var target = _ref.target;
      if (!target.closest('.custom-select')) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onEscapePress",
    value: function _onEscapePress(evt) {
      var isEscape = evt.key === 'Escape';
      if (isEscape) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onSelectItemClick",
    value: function _onSelectItemClick(element, index) {
      this._onSelectElementClickAction(element, index);
    }
  }, {
    key: "_onSelectItemKeydown",
    value: function _onSelectItemKeydown(evt, element, index) {
      var isEnter = evt.key === 'Enter';
      if (isEnter) {
        this._onSelectElementClickAction(element, index);
      }
    }
  }, {
    key: "_onLastItemKeydown",
    value: function _onLastItemKeydown(evt) {
      var isTab = evt.key === 'Tab';
      if (isTab) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onSelectClick",
    value: function _onSelectClick(evt) {
      var parent = evt.target.closest('[data-select]');
      var activeSelect = document.querySelector('[data-select].is-open');
      parent.classList.remove('is-invalid');
      if (activeSelect && activeSelect === parent) {
        activeSelect.classList.remove('is-open');
        return;
      }
      if (activeSelect) {
        this._closeSelect();
      }
      document.addEventListener('click', this._onDocumentClick);
      document.addEventListener('keydown', this._onEscapePress);
      if (parent.classList.contains('is-open')) {
        parent.classList.remove('is-open');
      } else {
        parent.classList.add('is-open');
      }
    }
  }, {
    key: "_onSelectKeydown",
    value: function _onSelectKeydown(evt) {
      var parent = evt.target.closest('[data-select]');
      parent.classList.remove('is-invalid');
      if (evt.shiftKey && evt.key === 'Tab' && parent.closest('.is-open')) {
        this._closeSelect();
      }
    }
  }, {
    key: "_setActiveSelectItemsState",
    value: function _setActiveSelectItemsState(multiple, selectItems) {
      var _this = this;
      var flag = true;
      this._activeIndex = [];
      selectItems.forEach(function (item, index) {
        if (multiple) {
          if (item.getAttribute('aria-selected') === 'true') {
            _this._activeIndex.push(index);
          }
        } else {
          if (item.getAttribute('aria-selected') === 'true' && flag) {
            _this._activeIndex.push(index);
            flag = false;
          } else {
            item.setAttribute('aria-selected', 'false');
          }
        }
      });
    }
  }, {
    key: "_createSelectStructure",
    value: function _createSelectStructure(item) {
      var nativeSelect = item.querySelector('select');
      if (nativeSelect) {
        this._selectElement = null;
        return;
      }
      var options = {};
      options.items = [];
      var multiple = item.dataset.multiple;
      var id = item.dataset.id;
      var name = item.dataset.name;
      var required = item.dataset.required;
      var insert = item.dataset.insert;
      var selectItems = item.querySelectorAll('.custom-select__item');
      this._setActiveSelectItemsState(multiple, selectItems);
      if (this._activeIndex.length) {
        options.activeIndex = this._activeIndex;
        this._setSelectActiveState(multiple, insert, item);
      }
      options.name = name || false;
      options.id = id || false;
      options.required = Boolean(required);
      options.multiple = Boolean(multiple);
      selectItems.forEach(function (selectItem) {
        var value = selectItem.dataset.selectValue;
        var itemInfo = {};
        itemInfo.text = selectItem.textContent;
        itemInfo.value = value;
        options.items.push(itemInfo);
      });
      Object(_utils_render__WEBPACK_IMPORTED_MODULE_0__["renderElement"])(item, Object(_utils_render__WEBPACK_IMPORTED_MODULE_0__["createElement"])(Object(_create_select_markup__WEBPACK_IMPORTED_MODULE_1__["createNativeSelectMarkup"])(options)));
      this._selectElement = item;
      this._activeIndex = null;
    }
  }, {
    key: "_setSelectAction",
    value: function _setSelectAction() {
      var _this2 = this;
      if (!this._selectElement) {
        return;
      }
      var button = this._selectElement.querySelector('.custom-select__button');
      var selectItems = this._selectElement.querySelectorAll('.custom-select__item');
      button.addEventListener('click', this._onSelectClick);
      button.addEventListener('keydown', this._onSelectKeydown);
      selectItems.forEach(function (element, index) {
        element.addEventListener('click', function () {
          _this2._onSelectItemClick(element, index);
        });
        element.addEventListener('keydown', function (evt) {
          _this2._onSelectItemKeydown(evt, element, index);
        });
        if (index === selectItems.length - 1) {
          element.addEventListener('keydown', _this2._onLastItemKeydown);
        }
      });
    }
  }, {
    key: "init",
    value: function init() {
      var _this3 = this;
      this._selects = document.querySelectorAll('[data-select]');
      this._selects.forEach(function (select) {
        _this3._createSelectStructure(select);
        _this3._setSelectAction();
      });
    }
  }]);
  return CustomSelect;
}();

/***/ }),

/***/ "./js/modules/tabs.js":
/*!****************************!*\
  !*** ./js/modules/tabs.js ***!
  \****************************/
/*! exports provided: Tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tabs", function() { return Tabs; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Tabs = /*#__PURE__*/function () {
  function Tabs() {
    _classCallCheck(this, Tabs);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._init();
  }
  _createClass(Tabs, [{
    key: "_init",
    value: function _init() {
      this._initAllTabs();
      document.addEventListener('click', this._documentClickHandler);
    }
  }, {
    key: "_resizeObserver",
    value: function _resizeObserver() {
      var _this = this;
      return new ResizeObserver(function (entries) {
        var _iterator = _createForOfIteratorHelper(entries),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var entry = _step.value;
            if (entry.target.classList.contains('is-active')) {
              _this._updateTabHeight();
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      });
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-tabs="control"]')) {
        return;
      }
      evt.preventDefault();
      evt.stopPropagation();
      var control = target.closest('[data-tabs="control"]');
      this.openTab(control);
    }
  }, {
    key: "_initAllTabs",
    value: function _initAllTabs() {
      var _this2 = this;
      var tabs = document.querySelectorAll('[data-tabs="parent"]');
      var forLoadTabs = document.querySelectorAll('[data-tabs="element"].for-load');
      tabs.forEach(function (tab) {
        _this2._initTab(tab);
      });
      forLoadTabs.forEach(function (tab) {
        tab.classList.remove('for-load');
      });
    }
  }, {
    key: "_removeAllActiveClasses",
    value: function _removeAllActiveClasses(tabControlElements, tabElements) {
      tabElements.forEach(function (tab) {
        tab.classList.remove('is-active');
      });
      tabControlElements.forEach(function (element, index) {
        element.classList.remove('is-active');
        element.setAttribute('data-index', index);
      });
    }
  }, {
    key: "_setTabStartState",
    value: function _setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay) {
      var activeIndex = this._returnActiveIndex(tabControlElements);
      var blockHeight = dataHeight === 'max' ? this._returnMaxHeight(tabElements) : tabElements[activeIndex].offsetHeight;
      this._removeAllActiveClasses(tabControlElements, tabElements);
      tab.classList.add('no-transition');
      tabControlElements[activeIndex].classList.add('is-active');
      tabElements[activeIndex].classList.add('is-active');
      if (dataHeight !== 'unset') {
        tabContentElement.style.height = "".concat(blockHeight, "px");
      }
      setTimeout(function () {
        if (dataDelay) {
          tab.classList.remove('no-transition');
        }
      }, dataDelay);
    }
  }, {
    key: "_returnActiveIndex",
    value: function _returnActiveIndex(tabControlElements) {
      var activeIndex = 0;
      var flag = true;
      tabControlElements.forEach(function (control, index) {
        if (control.classList.contains('is-active') && flag) {
          activeIndex = index;
          flag = false;
        }
      });
      return activeIndex;
    }
  }, {
    key: "_returnMaxHeight",
    value: function _returnMaxHeight(tabElements) {
      var height = [];
      tabElements.forEach(function (element) {
        height.push(element.offsetHeight);
      });
      height.sort(function (a, b) {
        return a - b;
      });
      return height[height.length - 1];
    }
  }, {
    key: "_returnScopeList",
    value: function _returnScopeList(nodeList, parent) {
      var array = [];
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          array.push(element);
        }
      });
      return array;
    }
  }, {
    key: "_returnScopeChild",
    value: function _returnScopeChild(nodeList, parent) {
      var currentChild;
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          currentChild = element;
        }
      });
      return currentChild;
    }
  }, {
    key: "_updateTabHeight",
    value: function _updateTabHeight() {
      var _this3 = this;
      var activeElements = document.querySelectorAll('[data-tabs="element"].is-active');
      activeElements.forEach(function (element) {
        var transition = false;
        var parent = element.closest('[data-tabs="parent"]');
        if (parent.closest('[data-tabs="element"]')) {
          transition = true;
        }
        _this3._setTabElementHeight(element, transition);
      });
    }
  }, {
    key: "_setTabElementHeight",
    value: function _setTabElementHeight(element, transition) {
      var parentElement = element.closest('[data-tabs="parent"]');
      var dataHeight = parentElement.dataset.height;
      var contentElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="content"]'), parentElement);
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      if (!transition) {
        parentElement.classList.add('no-transition');
      }
      if (dataHeight === 'max') {
        contentElement.style.height = "".concat(this._returnMaxHeight(tabElements), "px");
      } else if (dataHeight === 'unset') {
        contentElement.style.height = null;
      } else {
        contentElement.style.height = "".concat(this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement).offsetHeight, "px");
      }
      setTimeout(function () {
        return parentElement.classList.remove('no-transition');
      });
    }
  }, {
    key: "_createDOMElement",
    value: function _createDOMElement(elementType, attributes) {
      var element = document.createElement(elementType);
      for (var key in attributes) {
        if (attributes.hasOwnProperty(key)) {
          element.setAttribute(key, attributes[key]);
        }
      }
      return element;
    }
  }, {
    key: "_toggleAndRemoveClass",
    value: function _toggleAndRemoveClass(element, accordion, control) {
      accordion.classList.toggle('is-active', element.classList.contains('is-active'));
      element.classList.remove('is-active');
      control.classList.remove('is-active');
    }
  }, {
    key: "_setAccordionState",
    value: function _setAccordionState(parent, elements, controls) {
      var _this4 = this;
      if (parent.hasAttribute('data-accordion-init')) {
        return;
      }
      parent.setAttribute('data-accordion-init', '');
      elements.forEach(function (element, idx) {
        var accordion = _this4._createDOMElement('div', {
          'data-tabs': 'accordion'
        });
        var accordionWrapper = _this4._createDOMElement('div', {
          'data-tabs': 'accordion-wrapper'
        });
        var accordionContent = _this4._createDOMElement('div', {
          'data-tabs': 'accordion-content'
        });
        accordion.append(controls[idx], accordionWrapper);
        accordionWrapper.append(accordionContent);
        accordionContent.append(element);
        parent.append(accordion);
        _this4._toggleAndRemoveClass(element, accordion, controls[idx]);
      });
    }
  }, {
    key: "_removeAccordionState",
    value: function _removeAccordionState(parent, elements, controls) {
      var _this5 = this;
      if (!parent.hasAttribute('data-accordion-init')) {
        return;
      }
      parent.removeAttribute('data-accordion-init');
      var controlList = this._returnScopeChild(parent.querySelectorAll('[data-tabs="controls"]'), parent);
      var content = this._returnScopeChild(parent.querySelectorAll('[data-tabs="content"]'), parent);
      var activeAccordions = this._returnScopeList(parent.querySelectorAll('[data-tabs="accordion"].is-active'), parent);
      var activeControl = activeAccordions.length ? activeAccordions[0].querySelector('[data-tabs="control"]') : controls[0];
      var activeElement = activeAccordions.length ? activeAccordions[0].querySelector('[data-tabs="element"]') : elements[0];
      elements.forEach(function (element, idx) {
        var accordion = element.closest('[data-tabs="accordion"]');
        if (!accordion) {
          return;
        }
        controlList.append(controls[idx]);
        content.append(element);
        _this5._toggleAndRemoveClass(element, accordion, controls[idx]);
        accordion.remove();
      });
      activeControl.classList.add('is-active');
      activeElement.classList.add('is-active');
    }
  }, {
    key: "accordionBreakpointChecker",
    value: function accordionBreakpointChecker(media, parent, elements, controls) {
      if (media.matches) {
        this._setAccordionState(parent, elements, controls);
      } else {
        this._removeAccordionState(parent, elements, controls);
      }
    }
  }, {
    key: "_initTab",
    value: function _initTab(tab) {
      var _this6 = this;
      var dataHeight = tab.dataset.height;
      var dataDelay = tab.dataset.delay ? tab.dataset.delay : 0;
      var tabContentElement = tab.querySelector('[data-tabs="content"]');
      var tabControlElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="control"]'), tab);
      var tabElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="element"]'), tab);
      var accordionMedia = tab.getAttribute('data-accordion-media') ? window.matchMedia(tab.getAttribute('data-accordion-media')) : null;
      this._setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay);
      if (accordionMedia && !tab.accordionListener) {
        this.accordionBreakpointChecker(accordionMedia, tab, tabElements, tabControlElements);
        accordionMedia.addEventListener('change', this.accordionBreakpointChecker.bind(this, accordionMedia, tab, tabElements, tabControlElements));
        tab.accordionListener = true;
      }
      if (dataHeight !== 'unset') {
        tabElements.forEach(function (element) {
          _this6._resizeObserver().observe(element);
        });
      }
      setTimeout(function () {
        tab.classList.remove('no-transition-global');
      });
    }
  }, {
    key: "reInit",
    value: function reInit() {
      this._initAllTabs();
    }
  }, {
    key: "toggleAccordion",
    value: function toggleAccordion(accordion) {
      if (accordion.classList.contains('is-active')) {
        this.closeAccordion(accordion);
      } else {
        this.openAccordion(accordion);
      }
    }
  }, {
    key: "openAccordion",
    value: function openAccordion(accordion) {
      var parentElement = accordion.closest('[data-accordion-init]');
      var accordionWrapper = accordion.querySelector('[data-tabs="accordion-wrapper"]');
      accordionWrapper.style.maxHeight = "".concat(accordionWrapper.offsetHeight, "px");
      if (parentElement.hasAttribute('data-single')) {
        this.closeAllAccordion(parentElement);
      }
      accordion.classList.add('is-active');
      setTimeout(function () {
        accordionWrapper.style.maxHeight = "".concat(accordionWrapper.scrollHeight, "px");
        accordionWrapper.addEventListener('transitionend', function () {
          accordionWrapper.style.maxHeight = null;
        }, {
          once: true
        });
      }, 0);
    }
  }, {
    key: "closeAllAccordion",
    value: function closeAllAccordion(parent) {
      var _this7 = this;
      var elements = parent.querySelectorAll('[data-tabs="accordion"]');
      elements.forEach(function (element) {
        var currentParent = element.closest('[data-accordion-init]');
        if (currentParent === parent && element.classList.contains('is-active')) {
          _this7.closeAccordion(element);
        }
      });
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion(accordion) {
      var accordionWrapper = accordion.querySelector('[data-tabs="accordion-wrapper"]');
      accordion.classList.remove('is-active');
      accordionWrapper.style.transition = 'none';
      accordionWrapper.style.maxHeight = "".concat(accordionWrapper.scrollHeight, "px");
      setTimeout(function () {
        accordionWrapper.style.transition = null;
        accordionWrapper.style.maxHeight = '0px';
        accordionWrapper.addEventListener('transitionend', function () {
          accordionWrapper.style.maxHeight = null;
        }, {
          once: true
        });
      }, 0);
    }
  }, {
    key: "openTab",
    value: function openTab(control) {
      var currentIndex = control.dataset.index;
      var parentElement = control.closest('[data-tabs="parent"]');
      var accordion = control.closest('[data-tabs="accordion"]');
      if (accordion && accordion.closest('[data-tabs="parent"]') === parentElement) {
        this.toggleAccordion(accordion);
        document.activeElement.blur();
        return;
      }
      if (control.classList.contains('is-active') || parentElement.classList.contains('no-action')) {
        return;
      }
      var dataDelay = parentElement.dataset.delay ? parentElement.dataset.delay : 0;
      var dataHeight = parentElement.dataset.height;
      var contentElement = parentElement.querySelector('[data-tabs="content"]');
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      var activeControl = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="control"].is-active'), parentElement);
      var activeElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement);
      var currentHeight = contentElement.offsetHeight;
      var newHeight = tabElements[currentIndex].offsetHeight;
      parentElement.classList.add('no-action');
      document.activeElement.blur();
      if (activeControl) {
        activeControl.classList.remove('is-active');
      }
      if (activeElement) {
        activeElement.classList.remove('is-active');
      }
      if (currentHeight > newHeight) {
        setTimeout(function () {
          if (dataHeight !== 'max' && dataHeight !== 'unset') {
            contentElement.style.height = newHeight + 'px';
          }
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      } else {
        if (dataHeight !== 'max' && dataHeight !== 'unset') {
          contentElement.style.height = newHeight + 'px';
        }
        setTimeout(function () {
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      }
    }
  }]);
  return Tabs;
}();

/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);
    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }
  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;
      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }
        if (this._focusableElements.length === 1) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
      }
      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();
        this._focusableElements[0].focus();
      }
      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();
        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);
      if (!lockedElement) {
        return;
      }
      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;
      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];
      if (this._endElement) {
        this._endElement.blur();
      }
      if (startElement && startFocus) {
        startElement.focus();
      }
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }
      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);
  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/mobile-vh-fix.js":
/*!***********************************!*\
  !*** ./js/utils/mobile-vh-fix.js ***!
  \***********************************/
/*! exports provided: mobileVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mobileVhFix", function() { return mobileVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");

var mobileVhFix = function mobileVhFix() {
  var isMobile = /Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  var isIE = !!window.MSInputMethodContext && !!document.documentMode;
  if (!isIE && (isMobile || Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])())) {
    var updateViewportHeight = function updateViewportHeight() {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
    };
    updateViewportHeight();
    window.addEventListener('resize', updateViewportHeight);
  }
};


/***/ }),

/***/ "./js/utils/render.js":
/*!****************************!*\
  !*** ./js/utils/render.js ***!
  \****************************/
/*! exports provided: createElement, renderElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return createElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderElement", function() { return renderElement; });
var createElement = function createElement(template) {
  var newElement = document.createElement('div');
  newElement.innerHTML = template;
  return newElement.firstChild;
};
var renderElement = function renderElement(container, component) {
  var place = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'beforeend';
  switch (place) {
    case 'prepend':
      container.prepend(component);
      break;
    case 'afterend':
      container.after(component);
      break;
    case 'beforeend':
      container.append(component);
      break;
  }
};

/***/ }),

/***/ "./js/vendor/scroll-lock.min.js":
/*!**************************************!*\
  !*** ./js/vendor/scroll-lock.min.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
!function (e, t) {
  "object" == ( false ? undefined : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module)) ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(this, function () {
  return function (l) {
    var r = {};
    function o(e) {
      if (r[e]) return r[e].exports;
      var t = r[e] = {
        i: e,
        l: !1,
        exports: {}
      };
      return l[e].call(t.exports, t, t.exports, o), t.l = !0, t.exports;
    }
    return o.m = l, o.c = r, o.d = function (e, t, l) {
      o.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: l
      });
    }, o.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, o.t = function (t, e) {
      if (1 & e && (t = o(t)), 8 & e) return t;
      if (4 & e && "object" == _typeof(t) && t && t.__esModule) return t;
      var l = Object.create(null);
      if (o.r(l), Object.defineProperty(l, "default", {
        enumerable: !0,
        value: t
      }), 2 & e && "string" != typeof t) for (var r in t) o.d(l, r, function (e) {
        return t[e];
      }.bind(null, r));
      return l;
    }, o.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };
      return o.d(t, "a", t), t;
    }, o.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, o.p = "", o(o.s = 0);
  }([function (e, t, l) {
    "use strict";

    l.r(t);
    var r = function r(e) {
        return Array.isArray(e) ? e : [e];
      },
      a = function a(e) {
        return e instanceof Node;
      },
      o = function o(e, t) {
        if (e && t) {
          e = e instanceof NodeList ? e : [e];
          for (var l = 0; l < e.length && !0 !== t(e[l], l, e.length); l++);
        }
      },
      n = function n(e) {
        return console.error("[scroll-lock] ".concat(e));
      },
      b = function b(e) {
        if (Array.isArray(e)) return e.join(", ");
      },
      c = function c(e) {
        var t = [];
        return o(e, function (e) {
          return t.push(e);
        }), t;
      },
      h = function h(e, t) {
        var l = !(2 < arguments.length && void 0 !== arguments[2]) || arguments[2],
          r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : document;
        if (l && -1 !== c(r.querySelectorAll(t)).indexOf(e)) return e;
        for (; (e = e.parentElement) && -1 === c(r.querySelectorAll(t)).indexOf(e););
        return e;
      },
      v = function v(e, t) {
        var l = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : document;
        return -1 !== c(l.querySelectorAll(t)).indexOf(e);
      },
      i = function i(e) {
        if (e) return "hidden" === getComputedStyle(e).overflow;
      },
      m = function m(e) {
        if (e) return !!i(e) || e.scrollTop <= 0;
      },
      S = function S(e) {
        if (e) {
          if (i(e)) return !0;
          var t = e.scrollTop;
          return e.scrollHeight <= t + e.offsetHeight;
        }
      },
      y = function y(e) {
        if (e) return !!i(e) || e.scrollLeft <= 0;
      },
      k = function k(e) {
        if (e) {
          if (i(e)) return !0;
          var t = e.scrollLeft;
          return e.scrollWidth <= t + e.offsetWidth;
        }
      };
    l.d(t, "disablePageScroll", function () {
      return d;
    }), l.d(t, "enablePageScroll", function () {
      return s;
    }), l.d(t, "getScrollState", function () {
      return f;
    }), l.d(t, "clearQueueScrollLocks", function () {
      return p;
    }), l.d(t, "getTargetScrollBarWidth", function () {
      return g;
    }), l.d(t, "getCurrentTargetScrollBarWidth", function () {
      return A;
    }), l.d(t, "getPageScrollBarWidth", function () {
      return G;
    }), l.d(t, "getCurrentPageScrollBarWidth", function () {
      return T;
    }), l.d(t, "addScrollableTarget", function () {
      return L;
    }), l.d(t, "removeScrollableTarget", function () {
      return W;
    }), l.d(t, "addScrollableSelector", function () {
      return x;
    }), l.d(t, "removeScrollableSelector", function () {
      return F;
    }), l.d(t, "addLockableTarget", function () {
      return Y;
    }), l.d(t, "addLockableSelector", function () {
      return E;
    }), l.d(t, "setFillGapMethod", function () {
      return O;
    }), l.d(t, "addFillGapTarget", function () {
      return P;
    }), l.d(t, "removeFillGapTarget", function () {
      return j;
    }), l.d(t, "addFillGapSelector", function () {
      return q;
    }), l.d(t, "removeFillGapSelector", function () {
      return M;
    }), l.d(t, "refillGaps", function () {
      return N;
    });
    var u = ["padding", "margin", "width", "max-width", "none"],
      w = {
        scroll: !0,
        queue: 0,
        scrollableSelectors: ["[data-scroll-lock-scrollable]"],
        lockableSelectors: ["body", "[data-scroll-lock-lockable]"],
        fillGapSelectors: ["body", "[data-scroll-lock-fill-gap]", "[data-scroll-lock-lockable]"],
        fillGapMethod: u[0],
        startTouchY: 0,
        startTouchX: 0
      },
      d = function d(e) {
        w.queue <= 0 && (w.scroll = !1, B(), X()), L(e), w.queue++;
      },
      s = function s(e) {
        0 < w.queue && w.queue--, w.queue <= 0 && (w.scroll = !0, C(), Q()), W(e);
      },
      f = function f() {
        return w.scroll;
      },
      p = function p() {
        w.queue = 0;
      },
      g = function g(e) {
        var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        if (a(e)) {
          var l = e.style.overflowY;
          t ? f() || (e.style.overflowY = e.getAttribute("data-scroll-lock-saved-overflow-y-property")) : e.style.overflowY = "scroll";
          var r = A(e);
          return e.style.overflowY = l, r;
        }
        return 0;
      },
      A = function A(e) {
        if (a(e)) {
          if (e === document.body) {
            var t = document.documentElement.clientWidth;
            return window.innerWidth - t;
          }
          var l = e.style.borderLeftWidth,
            r = e.style.borderRightWidth;
          e.style.borderLeftWidth = "0px", e.style.borderRightWidth = "0px";
          var o = e.offsetWidth - e.clientWidth;
          return e.style.borderLeftWidth = l, e.style.borderRightWidth = r, o;
        }
        return 0;
      },
      G = function G() {
        var e = 0 < arguments.length && void 0 !== arguments[0] && arguments[0];
        return g(document.body, e);
      },
      T = function T() {
        return A(document.body);
      },
      L = function L(e) {
        e && r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? e.setAttribute("data-scroll-lock-scrollable", "") : n('"'.concat(e, '" is not a Element.'));
          });
        });
      },
      W = function W(e) {
        e && r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? e.removeAttribute("data-scroll-lock-scrollable") : n('"'.concat(e, '" is not a Element.'));
          });
        });
      },
      x = function x(e) {
        e && r(e).map(function (e) {
          w.scrollableSelectors.push(e);
        });
      },
      F = function F(e) {
        e && r(e).map(function (t) {
          w.scrollableSelectors = w.scrollableSelectors.filter(function (e) {
            return e !== t;
          });
        });
      },
      Y = function Y(e) {
        e && (r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? e.setAttribute("data-scroll-lock-lockable", "") : n('"'.concat(e, '" is not a Element.'));
          });
        }), f() || B());
      },
      E = function E(e) {
        e && (r(e).map(function (e) {
          w.lockableSelectors.push(e);
        }), f() || B(), q(e));
      },
      O = function O(e) {
        if (e) if (-1 !== u.indexOf(e)) w.fillGapMethod = e, N();else {
          var t = u.join(", ");
          n('"'.concat(e, '" method is not available!\nAvailable fill gap methods: ').concat(t, "."));
        }
      },
      P = function P(e) {
        e && r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? (e.setAttribute("data-scroll-lock-fill-gap", ""), w.scroll || H(e)) : n('"'.concat(e, '" is not a Element.'));
          });
        });
      },
      j = function j(e) {
        e && r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? (e.removeAttribute("data-scroll-lock-fill-gap"), w.scroll || I(e)) : n('"'.concat(e, '" is not a Element.'));
          });
        });
      },
      q = function q(e) {
        e && r(e).map(function (e) {
          -1 === w.fillGapSelectors.indexOf(e) && (w.fillGapSelectors.push(e), w.scroll || D(e));
        });
      },
      M = function M(e) {
        e && r(e).map(function (t) {
          w.fillGapSelectors = w.fillGapSelectors.filter(function (e) {
            return e !== t;
          }), w.scroll || z(t);
        });
      },
      N = function N() {
        w.scroll || X();
      },
      B = function B() {
        var e = b(w.lockableSelectors);
        K(e);
      },
      C = function C() {
        var e = b(w.lockableSelectors);
        R(e);
      },
      K = function K(e) {
        var t = document.querySelectorAll(e);
        o(t, function (e) {
          U(e);
        });
      },
      R = function R(e) {
        var t = document.querySelectorAll(e);
        o(t, function (e) {
          _(e);
        });
      },
      U = function U(e) {
        if (a(e) && "true" !== e.getAttribute("data-scroll-lock-locked")) {
          var t = window.getComputedStyle(e);
          e.setAttribute("data-scroll-lock-saved-overflow-y-property", t.overflowY), e.setAttribute("data-scroll-lock-saved-inline-overflow-property", e.style.overflow), e.setAttribute("data-scroll-lock-saved-inline-overflow-y-property", e.style.overflowY), e.style.overflow = "hidden", e.setAttribute("data-scroll-lock-locked", "true");
        }
      },
      _ = function _(e) {
        a(e) && "true" === e.getAttribute("data-scroll-lock-locked") && (e.style.overflow = e.getAttribute("data-scroll-lock-saved-inline-overflow-property"), e.style.overflowY = e.getAttribute("data-scroll-lock-saved-inline-overflow-y-property"), e.removeAttribute("data-scroll-lock-saved-overflow-property"), e.removeAttribute("data-scroll-lock-saved-inline-overflow-property"), e.removeAttribute("data-scroll-lock-saved-inline-overflow-y-property"), e.removeAttribute("data-scroll-lock-locked"));
      },
      X = function X() {
        w.fillGapSelectors.map(function (e) {
          D(e);
        });
      },
      Q = function Q() {
        w.fillGapSelectors.map(function (e) {
          z(e);
        });
      },
      D = function D(e) {
        var t = document.querySelectorAll(e),
          l = -1 !== w.lockableSelectors.indexOf(e);
        o(t, function (e) {
          H(e, l);
        });
      },
      H = function H(e) {
        var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        if (a(e)) {
          var l;
          if ("" === e.getAttribute("data-scroll-lock-lockable") || t) l = g(e, !0);else {
            var r = h(e, b(w.lockableSelectors));
            l = g(r, !0);
          }
          "true" === e.getAttribute("data-scroll-lock-filled-gap") && I(e);
          var o = window.getComputedStyle(e);
          if (e.setAttribute("data-scroll-lock-filled-gap", "true"), e.setAttribute("data-scroll-lock-current-fill-gap-method", w.fillGapMethod), "margin" === w.fillGapMethod) {
            var n = parseFloat(o.marginRight);
            e.style.marginRight = "".concat(n + l, "px");
          } else if ("width" === w.fillGapMethod) e.style.width = "calc(100% - ".concat(l, "px)");else if ("max-width" === w.fillGapMethod) e.style.maxWidth = "calc(100% - ".concat(l, "px)");else if ("padding" === w.fillGapMethod) {
            var c = parseFloat(o.paddingRight);
            e.style.paddingRight = "".concat(c + l, "px");
          }
        }
      },
      z = function z(e) {
        var t = document.querySelectorAll(e);
        o(t, function (e) {
          I(e);
        });
      },
      I = function I(e) {
        if (a(e) && "true" === e.getAttribute("data-scroll-lock-filled-gap")) {
          var t = e.getAttribute("data-scroll-lock-current-fill-gap-method");
          e.removeAttribute("data-scroll-lock-filled-gap"), e.removeAttribute("data-scroll-lock-current-fill-gap-method"), "margin" === t ? e.style.marginRight = "" : "width" === t ? e.style.width = "" : "max-width" === t ? e.style.maxWidth = "" : "padding" === t && (e.style.paddingRight = "");
        }
      };
    "undefined" != typeof window && window.addEventListener("resize", function (e) {
      N();
    }), "undefined" != typeof document && (document.addEventListener("touchstart", function (e) {
      w.scroll || (w.startTouchY = e.touches[0].clientY, w.startTouchX = e.touches[0].clientX);
    }), document.addEventListener("touchmove", function (n) {
      if (!w.scroll) {
        var e = w.startTouchY,
          t = w.startTouchX,
          l = n.touches[0].clientY,
          r = n.touches[0].clientX;
        if (n.touches.length < 2) {
          var c = b(w.scrollableSelectors),
            a = e < l,
            i = l < e,
            u = t < r,
            d = r < t,
            s = e + 3 < l,
            f = l < e - 3,
            p = t + 3 < r,
            g = r < t - 3;
          !function e(t) {
            var l = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
            if (t) {
              var r = h(t, c, !1);
              if (v(t, 'input[type="range"]')) return !1;
              if (l || v(t, 'textarea, [contenteditable="true"]') && h(t, c) || v(t, c)) {
                var o = !1;
                y(t) && k(t) ? (a && m(t) || i && S(t)) && (o = !0) : m(t) && S(t) ? (u && y(t) || d && k(t)) && (o = !0) : (s && m(t) || f && S(t) || p && y(t) || g && k(t)) && (o = !0), o && (r ? e(r, !0) : n.cancelable && n.preventDefault());
              } else e(r);
            } else n.cancelable && n.preventDefault();
          }(n.target);
        }
      }
    }, {
      passive: !1
    }), document.addEventListener("touchend", function (e) {
      w.scroll || (w.startTouchY = 0, w.startTouchX = 0);
    }));
    var J = {
        hide: function hide(e) {
          n('"hide" is deprecated! Use "disablePageScroll" instead. \n https://github.com/FL3NKEY/scroll-lock#disablepagescrollscrollabletarget'), d(e);
        },
        show: function show(e) {
          n('"show" is deprecated! Use "enablePageScroll" instead. \n https://github.com/FL3NKEY/scroll-lock#enablepagescrollscrollabletarget'), s(e);
        },
        toggle: function toggle(e) {
          n('"toggle" is deprecated! Do not use it.'), f() ? d() : s(e);
        },
        getState: function getState() {
          return n('"getState" is deprecated! Use "getScrollState" instead. \n https://github.com/FL3NKEY/scroll-lock#getscrollstate'), f();
        },
        getWidth: function getWidth() {
          return n('"getWidth" is deprecated! Use "getPageScrollBarWidth" instead. \n https://github.com/FL3NKEY/scroll-lock#getpagescrollbarwidth'), G();
        },
        getCurrentWidth: function getCurrentWidth() {
          return n('"getCurrentWidth" is deprecated! Use "getCurrentPageScrollBarWidth" instead. \n https://github.com/FL3NKEY/scroll-lock#getcurrentpagescrollbarwidth'), T();
        },
        setScrollableTargets: function setScrollableTargets(e) {
          n('"setScrollableTargets" is deprecated! Use "addScrollableTarget" instead. \n https://github.com/FL3NKEY/scroll-lock#addscrollabletargetscrollabletarget'), L(e);
        },
        setFillGapSelectors: function setFillGapSelectors(e) {
          n('"setFillGapSelectors" is deprecated! Use "addFillGapSelector" instead. \n https://github.com/FL3NKEY/scroll-lock#addfillgapselectorfillgapselector'), q(e);
        },
        setFillGapTargets: function setFillGapTargets(e) {
          n('"setFillGapTargets" is deprecated! Use "addFillGapTarget" instead. \n https://github.com/FL3NKEY/scroll-lock#addfillgaptargetfillgaptarget'), P(e);
        },
        clearQueue: function clearQueue() {
          n('"clearQueue" is deprecated! Use "clearQueueScrollLocks" instead. \n https://github.com/FL3NKEY/scroll-lock#clearqueuescrolllocks'), p();
        }
      },
      V = function (o) {
        for (var e = 1; e < arguments.length; e++) {
          var n = null != arguments[e] ? arguments[e] : {},
            t = Object.keys(n);
          "function" == typeof Object.getOwnPropertySymbols && (t = t.concat(Object.getOwnPropertySymbols(n).filter(function (e) {
            return Object.getOwnPropertyDescriptor(n, e).enumerable;
          }))), t.forEach(function (e) {
            var t, l, r;
            t = o, r = n[l = e], l in t ? Object.defineProperty(t, l, {
              value: r,
              enumerable: !0,
              configurable: !0,
              writable: !0
            }) : t[l] = r;
          });
        }
        return o;
      }({
        disablePageScroll: d,
        enablePageScroll: s,
        getScrollState: f,
        clearQueueScrollLocks: p,
        getTargetScrollBarWidth: g,
        getCurrentTargetScrollBarWidth: A,
        getPageScrollBarWidth: G,
        getCurrentPageScrollBarWidth: T,
        addScrollableSelector: x,
        removeScrollableSelector: F,
        addScrollableTarget: L,
        removeScrollableTarget: W,
        addLockableSelector: E,
        addLockableTarget: Y,
        addFillGapSelector: q,
        removeFillGapSelector: M,
        addFillGapTarget: P,
        removeFillGapTarget: j,
        setFillGapMethod: O,
        refillGaps: N,
        _state: w
      }, J);
    t.default = V;
  }]).default;
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/module.js */ "../node_modules/webpack/buildin/module.js")(module)))

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map